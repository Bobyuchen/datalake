{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.8", "generated_at": "2024-10-24T06:57:26.650736Z", "invocation_id": "a848dcfa-56f3-49dc-bb94-bf340e78f54f", "env": {}}, "results": [{"status": "error", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:15.219001Z", "completed_at": "2024-10-24T06:56:15.266125Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:15.267805Z", "completed_at": "2024-10-24T06:56:15.549483Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3446636199951172, "adapter_response": {}, "message": "Database Error in model exposures (models\\sources\\exposures.sql)\n  TrinoUserError(type=USER_ERROR, name=NOT_SUPPORTED, message=\"Timestamp precision (3) not supported for Iceberg. Use \"timestamp(6)\" instead.\", query_id=20241024_065615_00006_jzmkd)", "failures": null, "unique_id": "model.dbt_artifacts.exposures", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as varchar) as command_invocation_id,\n    cast(null as varchar) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as varchar) as name,\n    cast(null as varchar) as type,\n    cast(null as VARCHAR) as owner,\n    cast(null as varchar) as maturity,\n    cast(null as varchar) as path,\n    cast(null as varchar) as description,\n    cast(null as varchar) as url,\n    cast(null as varchar) as package_name,\n    cast(null as VARCHAR) as depends_on_nodes,\n    cast(null as VARCHAR) as tags,\n    cast(null as VARCHAR) as all_results\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"exposures\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:15.570478Z", "completed_at": "2024-10-24T06:56:15.592706Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:15.593706Z", "completed_at": "2024-10-24T06:56:15.665334Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.10354304313659668, "adapter_response": {}, "message": "Database Error in model invocations (models\\sources\\invocations.sql)\n  TrinoUserError(type=USER_ERROR, name=NOT_SUPPORTED, message=\"Timestamp precision (3) not supported for Iceberg. Use \"timestamp(6)\" instead.\", query_id=20241024_065615_00007_jzmkd)", "failures": null, "unique_id": "model.dbt_artifacts.invocations", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as varchar) as command_invocation_id,\n    cast(null as varchar) as dbt_version,\n    cast(null as varchar) as project_name,\n    cast(null as timestamp) as run_started_at,\n    cast(null as varchar) as dbt_command,\n    cast(null as boolean) as full_refresh_flag,\n    cast(null as varchar) as target_profile_name,\n    cast(null as varchar) as target_name,\n    cast(null as varchar) as target_schema,\n    cast(null as integer) as target_threads,\n    cast(null as varchar) as dbt_cloud_project_id,\n    cast(null as varchar) as dbt_cloud_job_id,\n    cast(null as varchar) as dbt_cloud_run_id,\n    cast(null as varchar) as dbt_cloud_run_reason_category,\n    cast(null as varchar) as dbt_cloud_run_reason,\n    cast(null as VARCHAR) as env_vars,\n    cast(null as VARCHAR) as dbt_vars,\n    cast(null as VARCHAR) as invocation_args,\n    cast(null as VARCHAR) as dbt_custom_envs\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"invocations\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:15.681443Z", "completed_at": "2024-10-24T06:56:15.703562Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:15.704663Z", "completed_at": "2024-10-24T06:56:15.801636Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.132246732711792, "adapter_response": {}, "message": "Database Error in model model_executions (models\\sources\\model_executions.sql)\n  TrinoUserError(type=USER_ERROR, name=NOT_SUPPORTED, message=\"Timestamp precision (3) not supported for Iceberg. Use \"timestamp(6)\" instead.\", query_id=20241024_065615_00008_jzmkd)", "failures": null, "unique_id": "model.dbt_artifacts.model_executions", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as varchar) as command_invocation_id,\n    cast(null as varchar) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as boolean) as was_full_refresh,\n    cast(null as varchar) as thread_id,\n    cast(null as varchar) as status,\n    cast(null as timestamp) as compile_started_at,\n    cast(null as timestamp) as query_completed_at,\n    cast(null as double) as total_node_runtime,\n    cast(null as integer) as rows_affected,\n    \n    cast(null as varchar) as materialization,\n    cast(null as varchar) as schema,\n    cast(null as varchar) as name,\n    cast(null as varchar) as alias,\n    cast(null as varchar) as message,\n    cast(null as VARCHAR) as adapter_response\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"model_executions\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:15.822859Z", "completed_at": "2024-10-24T06:56:15.844176Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:15.845835Z", "completed_at": "2024-10-24T06:56:15.939116Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.1277146339416504, "adapter_response": {}, "message": "Database Error in model models (models\\sources\\models.sql)\n  TrinoUserError(type=USER_ERROR, name=NOT_SUPPORTED, message=\"Timestamp precision (3) not supported for Iceberg. Use \"timestamp(6)\" instead.\", query_id=20241024_065615_00009_jzmkd)", "failures": null, "unique_id": "model.dbt_artifacts.models", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as varchar) as command_invocation_id,\n    cast(null as varchar) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as varchar) as database,\n    cast(null as varchar) as schema,\n    cast(null as varchar) as name,\n    cast(null as VARCHAR) as depends_on_nodes,\n    cast(null as varchar) as package_name,\n    cast(null as varchar) as path,\n    cast(null as varchar) as checksum,\n    cast(null as varchar) as materialization,\n    cast(null as VARCHAR) as tags,\n    cast(null as VARCHAR) as meta,\n    cast(null as varchar) as alias,\n    cast(null as VARCHAR) as all_results\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"models\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:15.960836Z", "completed_at": "2024-10-24T06:56:15.986975Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:15.988634Z", "completed_at": "2024-10-24T06:56:16.089481Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.14002156257629395, "adapter_response": {}, "message": "Database Error in model seed_executions (models\\sources\\seed_executions.sql)\n  TrinoUserError(type=USER_ERROR, name=NOT_SUPPORTED, message=\"Timestamp precision (3) not supported for Iceberg. Use \"timestamp(6)\" instead.\", query_id=20241024_065616_00010_jzmkd)", "failures": null, "unique_id": "model.dbt_artifacts.seed_executions", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as varchar) as command_invocation_id,\n    cast(null as varchar) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as boolean) as was_full_refresh,\n    cast(null as varchar) as thread_id,\n    cast(null as varchar) as status,\n    cast(null as timestamp) as compile_started_at,\n    cast(null as timestamp) as query_completed_at,\n    cast(null as double) as total_node_runtime,\n    cast(null as integer) as rows_affected,\n    cast(null as varchar) as materialization,\n    cast(null as varchar) as schema,\n    cast(null as varchar) as name,\n    cast(null as varchar) as alias,\n    cast(null as varchar) as message,\n    cast(null as VARCHAR) as adapter_response\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"seed_executions\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:16.110430Z", "completed_at": "2024-10-24T06:56:16.128428Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:16.130079Z", "completed_at": "2024-10-24T06:56:16.209450Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11435246467590332, "adapter_response": {}, "message": "Database Error in model seeds (models\\sources\\seeds.sql)\n  TrinoUserError(type=USER_ERROR, name=NOT_SUPPORTED, message=\"Timestamp precision (3) not supported for Iceberg. Use \"timestamp(6)\" instead.\", query_id=20241024_065616_00011_jzmkd)", "failures": null, "unique_id": "model.dbt_artifacts.seeds", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as varchar) as command_invocation_id,\n    cast(null as varchar) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as varchar) as database,\n    cast(null as varchar) as schema,\n    cast(null as varchar) as name,\n    cast(null as varchar) as package_name,\n    cast(null as varchar) as path,\n    cast(null as varchar) as checksum,\n    cast(null as VARCHAR) as meta,\n    cast(null as varchar) as alias,\n    cast(null as VARCHAR) as all_results\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"seeds\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:16.234454Z", "completed_at": "2024-10-24T06:56:16.257668Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:16.260669Z", "completed_at": "2024-10-24T06:56:16.340742Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11866116523742676, "adapter_response": {}, "message": "Database Error in model snapshot_executions (models\\sources\\snapshot_executions.sql)\n  TrinoUserError(type=USER_ERROR, name=NOT_SUPPORTED, message=\"Timestamp precision (3) not supported for Iceberg. Use \"timestamp(6)\" instead.\", query_id=20241024_065616_00012_jzmkd)", "failures": null, "unique_id": "model.dbt_artifacts.snapshot_executions", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as varchar) as command_invocation_id,\n    cast(null as varchar) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as boolean) as was_full_refresh,\n    cast(null as varchar) as thread_id,\n    cast(null as varchar) as status,\n    cast(null as timestamp) as compile_started_at,\n    cast(null as timestamp) as query_completed_at,\n    cast(null as double) as total_node_runtime,\n    cast(null as integer) as rows_affected,\n    cast(null as varchar) as materialization,\n    cast(null as varchar) as schema,\n    cast(null as varchar) as name,\n    cast(null as varchar) as alias,\n    cast(null as varchar) as message,\n    cast(null as VARCHAR) as adapter_response\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"snapshot_executions\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:16.361311Z", "completed_at": "2024-10-24T06:56:16.381103Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:16.382139Z", "completed_at": "2024-10-24T06:56:16.468688Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12115144729614258, "adapter_response": {}, "message": "Database Error in model snapshots (models\\sources\\snapshots.sql)\n  TrinoUserError(type=USER_ERROR, name=NOT_SUPPORTED, message=\"Timestamp precision (3) not supported for Iceberg. Use \"timestamp(6)\" instead.\", query_id=20241024_065616_00013_jzmkd)", "failures": null, "unique_id": "model.dbt_artifacts.snapshots", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as varchar) as command_invocation_id,\n    cast(null as varchar) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as varchar) as database,\n    cast(null as varchar) as schema,\n    cast(null as varchar) as name,\n    cast(null as VARCHAR) as depends_on_nodes,\n    cast(null as varchar) as package_name,\n    cast(null as varchar) as path,\n    cast(null as varchar) as checksum,\n    cast(null as varchar) as strategy,\n    cast(null as VARCHAR) as meta,\n    cast(null as varchar) as alias,\n    cast(null as VARCHAR) as all_results\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"snapshots\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:16.492026Z", "completed_at": "2024-10-24T06:56:16.512730Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:16.514366Z", "completed_at": "2024-10-24T06:56:16.610696Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.13063764572143555, "adapter_response": {}, "message": "Database Error in model sources (models\\sources\\sources.sql)\n  TrinoUserError(type=USER_ERROR, name=NOT_SUPPORTED, message=\"Timestamp precision (3) not supported for Iceberg. Use \"timestamp(6)\" instead.\", query_id=20241024_065616_00014_jzmkd)", "failures": null, "unique_id": "model.dbt_artifacts.sources", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as varchar) as command_invocation_id,\n    cast(null as varchar) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as varchar) as database,\n    cast(null as varchar) as schema,\n    cast(null as varchar) as source_name,\n    cast(null as varchar) as loader,\n    cast(null as varchar) as name,\n    cast(null as varchar) as identifier,\n    cast(null as varchar) as loaded_at_field,\n    \n        cast(null as VARCHAR) as freshness,\n    \n    cast(null as VARCHAR) as all_results\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"sources\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:16.631207Z", "completed_at": "2024-10-24T06:56:16.650317Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:16.652049Z", "completed_at": "2024-10-24T06:56:16.742741Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12355184555053711, "adapter_response": {}, "message": "Database Error in model test_executions (models\\sources\\test_executions.sql)\n  TrinoUserError(type=USER_ERROR, name=NOT_SUPPORTED, message=\"Timestamp precision (3) not supported for Iceberg. Use \"timestamp(6)\" instead.\", query_id=20241024_065616_00015_jzmkd)", "failures": null, "unique_id": "model.dbt_artifacts.test_executions", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as varchar) as command_invocation_id,\n    cast(null as varchar) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as boolean) as was_full_refresh,\n    cast(null as varchar) as thread_id,\n    cast(null as varchar) as status,\n    cast(null as timestamp) as compile_started_at,\n    cast(null as timestamp) as query_completed_at,\n    cast(null as double) as total_node_runtime,\n    cast(null as integer) as rows_affected,\n    cast(null as integer) as failures,\n    cast(null as varchar) as message,\n    cast(null as VARCHAR) as adapter_response\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"test_executions\""}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:16.762548Z", "completed_at": "2024-10-24T06:56:16.779945Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:16.781610Z", "completed_at": "2024-10-24T06:56:16.869956Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12160086631774902, "adapter_response": {}, "message": "Database Error in model tests (models\\sources\\tests.sql)\n  TrinoUserError(type=USER_ERROR, name=NOT_SUPPORTED, message=\"Timestamp precision (3) not supported for Iceberg. Use \"timestamp(6)\" instead.\", query_id=20241024_065616_00016_jzmkd)", "failures": null, "unique_id": "model.dbt_artifacts.tests", "compiled": true, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as varchar) as command_invocation_id,\n    cast(null as varchar) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as varchar) as name,\n    cast(null as VARCHAR) as depends_on_nodes,\n    cast(null as varchar) as package_name,\n    cast(null as varchar) as test_path,\n    cast(null as VARCHAR) as tags,\n    cast(null as VARCHAR) as all_results\nfrom dummy_cte\nwhere 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"tests\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:16.893219Z", "completed_at": "2024-10-24T06:56:16.988584Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:16.990959Z", "completed_at": "2024-10-24T06:56:22.975585Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 6.092594861984253, "adapter_response": {"_message": "CREATE TABLE (0 rows)", "rows_affected": 0, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.data_monitoring_metrics\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"data_monitoring_metrics\"\n      \n      \n    as (\n      \n\n\n    \n    \n        \n    \n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as id\n\n,\n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as metric_name\n\n,\n                \n        cast('dummy_string' as varchar) as metric_type\n\n,\n                \n        cast(123456789.99 as double) as metric_value\n\n,\n                \n        cast('dummy_string' as varchar) as source_value\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as bucket_start\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as bucket_end\n\n,\n                \n        cast(123456789 as integer) as bucket_duration_hours\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as updated_at\n\n,\n                \n        cast('dummy_string' as varchar) as dimension\n\n,\n                \n        cast('dummy_string' as varchar) as dimension_value\n\n,\n                \n        cast('dummy_string' as varchar) as metric_properties\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n\n    )", "query_id": "20241024_065617_00017_jzmkd"}, "message": "CREATE TABLE (0 rows)", "failures": null, "unique_id": "model.elementary.data_monitoring_metrics", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n    \n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as id\n\n,\n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as metric_name\n\n,\n                \n        cast('dummy_string' as varchar) as metric_type\n\n,\n                \n        cast(123456789.99 as double) as metric_value\n\n,\n                \n        cast('dummy_string' as varchar) as source_value\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as bucket_start\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as bucket_end\n\n,\n                \n        cast(123456789 as integer) as bucket_duration_hours\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as updated_at\n\n,\n                \n        cast('dummy_string' as varchar) as dimension\n\n,\n                \n        cast('dummy_string' as varchar) as dimension_value\n\n,\n                \n        cast('dummy_string' as varchar) as metric_properties\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "\"iceberg\".\"omop\".\"data_monitoring_metrics\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:23.000199Z", "completed_at": "2024-10-24T06:56:23.070296Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:23.072343Z", "completed_at": "2024-10-24T06:56:41.332243Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 18.339855909347534, "adapter_response": {"_message": "CREATE TABLE (0 rows)", "rows_affected": 0, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.dbt_columns\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"dbt_columns\"\n      \n      \n    as (\n      \n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as parent_unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as resource_type\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0\n    )", "query_id": "20241024_065623_00019_jzmkd"}, "message": "CREATE TABLE (0 rows)", "failures": null, "unique_id": "model.elementary.dbt_columns", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as parent_unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as resource_type\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"dbt_columns\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:41.346618Z", "completed_at": "2024-10-24T06:56:41.392761Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:41.394529Z", "completed_at": "2024-10-24T06:56:42.007007Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.6666660308837891, "adapter_response": {"_message": "CREATE TABLE (0 rows)", "rows_affected": 0, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.dbt_exposures\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"dbt_exposures\"\n      \n      \n    as (\n      \n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as maturity\n\n,\n                \n        cast('dummy_string' as varchar) as type\n\n,\n                \n        cast('dummy_string' as varchar) as owner_email\n\n,\n                \n        cast('dummy_string' as varchar) as owner_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as url\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_columns\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar) as label\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as raw_queries\n\n\n        ) as empty_table\n        where 1 = 0\n    )", "query_id": "20241024_065641_00027_jzmkd"}, "message": "CREATE TABLE (0 rows)", "failures": null, "unique_id": "model.elementary.dbt_exposures", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as maturity\n\n,\n                \n        cast('dummy_string' as varchar) as type\n\n,\n                \n        cast('dummy_string' as varchar) as owner_email\n\n,\n                \n        cast('dummy_string' as varchar) as owner_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as url\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_columns\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar) as label\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as raw_queries\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"dbt_exposures\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:42.021274Z", "completed_at": "2024-10-24T06:56:42.082726Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:42.083731Z", "completed_at": "2024-10-24T06:56:42.565612Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5516512393951416, "adapter_response": {"_message": "CREATE TABLE (0 rows)", "rows_affected": 0, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.dbt_invocations\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"dbt_invocations\"\n      \n      \n    as (\n      \n\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as invocation_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as job_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as job_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as job_run_id\n\n,\n                \n        cast('dummy_string' as varchar) as run_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as run_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as created_at\n\n,\n                \n        cast('dummy_string' as varchar) as command\n\n,\n                \n        cast('dummy_string' as varchar) as dbt_version\n\n,\n                \n        cast('dummy_string' as varchar) as elementary_version\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as invocation_vars\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as vars\n\n,\n                \n        cast('dummy_string' as varchar) as target_name\n\n,\n                \n        cast('dummy_string' as varchar) as target_database\n\n,\n                \n        cast('dummy_string' as varchar) as target_schema\n\n,\n                \n        cast('dummy_string' as varchar) as target_profile_name\n\n,\n                \n        cast(123456789 as integer) as threads\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as selected\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as yaml_selector\n\n,\n                \n        cast('dummy_string' as varchar) as project_id\n\n,\n                \n        cast('dummy_string' as varchar) as project_name\n\n,\n                \n        cast('dummy_string' as varchar) as env\n\n,\n                \n        cast('dummy_string' as varchar) as env_id\n\n,\n                \n        cast('dummy_string' as varchar) as cause_category\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as cause\n\n,\n                \n        cast('dummy_string' as varchar) as pull_request_id\n\n,\n                \n        cast('dummy_string' as varchar) as git_sha\n\n,\n                \n        cast('dummy_string' as varchar) as orchestrator\n\n,\n                \n        cast('dummy_string' as varchar) as dbt_user\n\n,\n                \n        cast('dummy_string' as varchar) as job_url\n\n,\n                \n        cast('dummy_string' as varchar) as job_run_url\n\n,\n                \n        cast('dummy_string' as varchar) as account_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as target_adapter_specific_fields\n\n\n        ) as empty_table\n        where 1 = 0\n    )", "query_id": "20241024_065642_00030_jzmkd"}, "message": "CREATE TABLE (0 rows)", "failures": null, "unique_id": "model.elementary.dbt_invocations", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as invocation_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as job_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as job_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as job_run_id\n\n,\n                \n        cast('dummy_string' as varchar) as run_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as run_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as created_at\n\n,\n                \n        cast('dummy_string' as varchar) as command\n\n,\n                \n        cast('dummy_string' as varchar) as dbt_version\n\n,\n                \n        cast('dummy_string' as varchar) as elementary_version\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as invocation_vars\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as vars\n\n,\n                \n        cast('dummy_string' as varchar) as target_name\n\n,\n                \n        cast('dummy_string' as varchar) as target_database\n\n,\n                \n        cast('dummy_string' as varchar) as target_schema\n\n,\n                \n        cast('dummy_string' as varchar) as target_profile_name\n\n,\n                \n        cast(123456789 as integer) as threads\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as selected\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as yaml_selector\n\n,\n                \n        cast('dummy_string' as varchar) as project_id\n\n,\n                \n        cast('dummy_string' as varchar) as project_name\n\n,\n                \n        cast('dummy_string' as varchar) as env\n\n,\n                \n        cast('dummy_string' as varchar) as env_id\n\n,\n                \n        cast('dummy_string' as varchar) as cause_category\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as cause\n\n,\n                \n        cast('dummy_string' as varchar) as pull_request_id\n\n,\n                \n        cast('dummy_string' as varchar) as git_sha\n\n,\n                \n        cast('dummy_string' as varchar) as orchestrator\n\n,\n                \n        cast('dummy_string' as varchar) as dbt_user\n\n,\n                \n        cast('dummy_string' as varchar) as job_url\n\n,\n                \n        cast('dummy_string' as varchar) as job_run_url\n\n,\n                \n        cast('dummy_string' as varchar) as account_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as target_adapter_specific_fields\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"dbt_invocations\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:42.583545Z", "completed_at": "2024-10-24T06:56:42.633433Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:42.635440Z", "completed_at": "2024-10-24T06:56:43.291675Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7142455577850342, "adapter_response": {"_message": "CREATE TABLE (0 rows)", "rows_affected": 0, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.dbt_metrics\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"dbt_metrics\"\n      \n      \n    as (\n      \n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as label\n\n,\n                \n        cast('dummy_string' as varchar) as model\n\n,\n                \n        cast('dummy_string' as varchar) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as sql\n\n,\n                \n        cast('dummy_string' as varchar) as timestamp\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as filters\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as time_grains\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as dimensions\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0\n    )", "query_id": "20241024_065642_00032_jzmkd"}, "message": "CREATE TABLE (0 rows)", "failures": null, "unique_id": "model.elementary.dbt_metrics", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as label\n\n,\n                \n        cast('dummy_string' as varchar) as model\n\n,\n                \n        cast('dummy_string' as varchar) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as sql\n\n,\n                \n        cast('dummy_string' as varchar) as timestamp\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as filters\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as time_grains\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as dimensions\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"dbt_metrics\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:43.309383Z", "completed_at": "2024-10-24T06:56:43.354804Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:43.356440Z", "completed_at": "2024-10-24T06:56:48.582469Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 5.280722141265869, "adapter_response": {"_message": "CREATE TABLE (0 rows)", "rows_affected": 0, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.dbt_models\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"dbt_models\"\n      \n      \n    as (\n      \n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as checksum\n\n,\n                \n        cast('dummy_string' as varchar) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as patch_path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0\n    )", "query_id": "20241024_065643_00035_jzmkd"}, "message": "CREATE TABLE (0 rows)", "failures": null, "unique_id": "model.elementary.dbt_models", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as checksum\n\n,\n                \n        cast('dummy_string' as varchar) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as patch_path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"dbt_models\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:48.599973Z", "completed_at": "2024-10-24T06:56:48.656728Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:48.658324Z", "completed_at": "2024-10-24T06:56:49.042900Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.4507415294647217, "adapter_response": {"_message": "CREATE TABLE (0 rows)", "rows_affected": 0, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.dbt_run_results\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"dbt_run_results\"\n      \n      \n    as (\n      \n\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as invocation_id\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as created_at\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as message\n\n,\n                \n        cast('dummy_string' as varchar) as status\n\n,\n                \n        cast('dummy_string' as varchar) as resource_type\n\n,\n                \n        cast(123456789.99 as double) as execution_time\n\n,\n                \n        cast('dummy_string' as varchar) as execute_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as compile_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as compile_completed_at\n\n,\n                \n        cast(31474836478 as bigint) as rows_affected\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as compiled_code\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as varchar) as query_id\n\n,\n                \n        cast('dummy_string' as varchar) as thread_id\n\n,\n                \n        cast('dummy_string' as varchar) as materialization\n\n,\n                \n        cast('dummy_string' as varchar) as adapter_response\n\n\n        ) as empty_table\n        where 1 = 0\n    )", "query_id": "20241024_065648_00043_jzmkd"}, "message": "CREATE TABLE (0 rows)", "failures": null, "unique_id": "model.elementary.dbt_run_results", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as invocation_id\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as created_at\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as message\n\n,\n                \n        cast('dummy_string' as varchar) as status\n\n,\n                \n        cast('dummy_string' as varchar) as resource_type\n\n,\n                \n        cast(123456789.99 as double) as execution_time\n\n,\n                \n        cast('dummy_string' as varchar) as execute_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as compile_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as compile_completed_at\n\n,\n                \n        cast(31474836478 as bigint) as rows_affected\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as compiled_code\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as varchar) as query_id\n\n,\n                \n        cast('dummy_string' as varchar) as thread_id\n\n,\n                \n        cast('dummy_string' as varchar) as materialization\n\n,\n                \n        cast('dummy_string' as varchar) as adapter_response\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"dbt_run_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:49.058459Z", "completed_at": "2024-10-24T06:56:49.206337Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:49.208602Z", "completed_at": "2024-10-24T06:56:49.811062Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7598772048950195, "adapter_response": {"_message": "CREATE TABLE (0 rows)", "rows_affected": 0, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.dbt_seeds\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"dbt_seeds\"\n      \n      \n    as (\n      \n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as checksum\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0\n    )", "query_id": "20241024_065649_00045_jzmkd"}, "message": "CREATE TABLE (0 rows)", "failures": null, "unique_id": "model.elementary.dbt_seeds", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as checksum\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"dbt_seeds\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:49.827314Z", "completed_at": "2024-10-24T06:56:49.861826Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:49.863840Z", "completed_at": "2024-10-24T06:56:50.499896Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.6801581382751465, "adapter_response": {"_message": "CREATE TABLE (0 rows)", "rows_affected": 0, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.dbt_snapshots\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"dbt_snapshots\"\n      \n      \n    as (\n      \n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as checksum\n\n,\n                \n        cast('dummy_string' as varchar) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as patch_path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0\n    )", "query_id": "20241024_065649_00048_jzmkd"}, "message": "CREATE TABLE (0 rows)", "failures": null, "unique_id": "model.elementary.dbt_snapshots", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as checksum\n\n,\n                \n        cast('dummy_string' as varchar) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as patch_path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"dbt_snapshots\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:50.514994Z", "completed_at": "2024-10-24T06:56:50.564305Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:50.565924Z", "completed_at": "2024-10-24T06:56:51.068617Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5611007213592529, "adapter_response": {"_message": "CREATE TABLE (0 rows)", "rows_affected": 0, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.dbt_source_freshness_results\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"dbt_source_freshness_results\"\n      \n      \n    as (\n      \n\n\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as source_freshness_execution_id\n\n,\n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as max_loaded_at\n\n,\n                \n        cast('dummy_string' as varchar) as snapshotted_at\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as created_at\n\n,\n                \n        cast(123456789.99 as double) as max_loaded_at_time_ago_in_s\n\n,\n                \n        cast('dummy_string' as varchar) as status\n\n,\n                \n        cast('dummy_string' as varchar) as error\n\n,\n                \n        cast('dummy_string' as varchar) as compile_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as compile_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as execute_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as invocation_id\n\n,\n                \n        cast('dummy_string' as varchar) as warn_after\n\n,\n                \n        cast('dummy_string' as varchar) as error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as filter\n\n\n        ) as empty_table\n        where 1 = 0\n\n    )", "query_id": "20241024_065650_00051_jzmkd"}, "message": "CREATE TABLE (0 rows)", "failures": null, "unique_id": "model.elementary.dbt_source_freshness_results", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as source_freshness_execution_id\n\n,\n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as max_loaded_at\n\n,\n                \n        cast('dummy_string' as varchar) as snapshotted_at\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as created_at\n\n,\n                \n        cast(123456789.99 as double) as max_loaded_at_time_ago_in_s\n\n,\n                \n        cast('dummy_string' as varchar) as status\n\n,\n                \n        cast('dummy_string' as varchar) as error\n\n,\n                \n        cast('dummy_string' as varchar) as compile_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as compile_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as execute_started_at\n\n,\n                \n        cast('dummy_string' as varchar) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as varchar) as invocation_id\n\n,\n                \n        cast('dummy_string' as varchar) as warn_after\n\n,\n                \n        cast('dummy_string' as varchar) as error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as filter\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "\"iceberg\".\"omop\".\"dbt_source_freshness_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:51.084360Z", "completed_at": "2024-10-24T06:56:51.137231Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:51.138316Z", "completed_at": "2024-10-24T06:56:55.096555Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 4.018677711486816, "adapter_response": {"_message": "CREATE TABLE (0 rows)", "rows_affected": 0, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.dbt_sources\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"dbt_sources\"\n      \n      \n    as (\n      \n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as source_name\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as identifier\n\n,\n                \n        cast('dummy_string' as varchar) as loaded_at_field\n\n,\n                \n        cast('dummy_string' as varchar) as freshness_warn_after\n\n,\n                \n        cast('dummy_string' as varchar) as freshness_error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as freshness_filter\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as freshness_description\n\n,\n                \n        cast('dummy_string' as varchar) as relation_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as source_description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0\n    )", "query_id": "20241024_065651_00053_jzmkd"}, "message": "CREATE TABLE (0 rows)", "failures": null, "unique_id": "model.elementary.dbt_sources", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as source_name\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as identifier\n\n,\n                \n        cast('dummy_string' as varchar) as loaded_at_field\n\n,\n                \n        cast('dummy_string' as varchar) as freshness_warn_after\n\n,\n                \n        cast('dummy_string' as varchar) as freshness_error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as freshness_filter\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as freshness_description\n\n,\n                \n        cast('dummy_string' as varchar) as relation_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('dummy_string' as varchar) as owner\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as source_description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"dbt_sources\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:55.112732Z", "completed_at": "2024-10-24T06:56:55.180811Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:55.182999Z", "completed_at": "2024-10-24T06:56:55.794611Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.6895382404327393, "adapter_response": {"_message": "CREATE TABLE (0 rows)", "rows_affected": 0, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.dbt_tests\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"dbt_tests\"\n      \n      \n    as (\n      \n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as short_name\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as test_column_name\n\n,\n                \n        cast('dummy_string' as varchar) as severity\n\n,\n                \n        cast('dummy_string' as varchar) as warn_if\n\n,\n                \n        cast('dummy_string' as varchar) as error_if\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_params\n\n,\n                \n        cast('dummy_string' as varchar) as test_namespace\n\n,\n                \n        cast('dummy_string' as varchar) as test_original_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_owners\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('dummy_string' as varchar) as parent_model_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('dummy_string' as varchar) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar) as quality_dimension\n\n\n        ) as empty_table\n        where 1 = 0\n    )", "query_id": "20241024_065655_00061_jzmkd"}, "message": "CREATE TABLE (0 rows)", "failures": null, "unique_id": "model.elementary.dbt_tests", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as name\n\n,\n                \n        cast('dummy_string' as varchar) as short_name\n\n,\n                \n        cast('dummy_string' as varchar) as alias\n\n,\n                \n        cast('dummy_string' as varchar) as test_column_name\n\n,\n                \n        cast('dummy_string' as varchar) as severity\n\n,\n                \n        cast('dummy_string' as varchar) as warn_if\n\n,\n                \n        cast('dummy_string' as varchar) as error_if\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_params\n\n,\n                \n        cast('dummy_string' as varchar) as test_namespace\n\n,\n                \n        cast('dummy_string' as varchar) as test_original_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_owners\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as meta\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as depends_on_nodes\n\n,\n                \n        cast('dummy_string' as varchar) as parent_model_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as description\n\n,\n                \n        cast('dummy_string' as varchar) as package_name\n\n,\n                \n        cast('dummy_string' as varchar) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as original_path\n\n,\n                \n        cast('dummy_string' as varchar) as path\n\n,\n                \n        cast('dummy_string' as varchar) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar) as quality_dimension\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"dbt_tests\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:55.811040Z", "completed_at": "2024-10-24T06:56:55.860167Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:55.862028Z", "completed_at": "2024-10-24T06:56:56.230009Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.4263584613800049, "adapter_response": {"_message": "CREATE TABLE (0 rows)", "rows_affected": 0, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.elementary_test_results\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"elementary_test_results\"\n      \n      \n    as (\n      \n\n\n    select * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as id\n\n,\n                \n        cast('dummy_string' as varchar) as data_issue_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as invocation_id\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as detected_at\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as created_at\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as test_type\n\n,\n                \n        cast('dummy_string' as varchar) as test_sub_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_results_description\n\n,\n                \n        cast('dummy_string' as varchar) as owners\n\n,\n                \n        cast('dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_results_query\n\n,\n                \n        cast('dummy_string' as varchar) as other\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_params\n\n,\n                \n        cast('dummy_string' as varchar) as severity\n\n,\n                \n        cast('dummy_string' as varchar) as status\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as varchar) as test_short_name\n\n,\n                \n        cast('dummy_string' as varchar) as test_alias\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as result_rows\n\n,\n                \n        cast(31474836478 as bigint) as failed_row_count\n\n\n        ) as empty_table\n        where 1 = 0\n\n    )", "query_id": "20241024_065655_00064_jzmkd"}, "message": "CREATE TABLE (0 rows)", "failures": null, "unique_id": "model.elementary.elementary_test_results", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as id\n\n,\n                \n        cast('dummy_string' as varchar) as data_issue_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as model_unique_id\n\n,\n                \n        cast('dummy_string' as varchar) as invocation_id\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as detected_at\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as created_at\n\n,\n                \n        cast('dummy_string' as varchar) as database_name\n\n,\n                \n        cast('dummy_string' as varchar) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar) as table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as test_type\n\n,\n                \n        cast('dummy_string' as varchar) as test_sub_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_results_description\n\n,\n                \n        cast('dummy_string' as varchar) as owners\n\n,\n                \n        cast('dummy_string' as varchar) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_results_query\n\n,\n                \n        cast('dummy_string' as varchar) as other\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as test_params\n\n,\n                \n        cast('dummy_string' as varchar) as severity\n\n,\n                \n        cast('dummy_string' as varchar) as status\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as varchar) as test_short_name\n\n,\n                \n        cast('dummy_string' as varchar) as test_alias\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as result_rows\n\n,\n                \n        cast(31474836478 as bigint) as failed_row_count\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "\"iceberg\".\"omop\".\"elementary_test_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:56.246197Z", "completed_at": "2024-10-24T06:56:56.263140Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:56.264660Z", "completed_at": "2024-10-24T06:56:56.823349Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5844969749450684, "adapter_response": {"_message": "CREATE TABLE (1 rows)", "rows_affected": 1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.metadata\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"metadata\"\n      \n      \n    as (\n      \n\nSELECT\n    '0.16.1' as dbt_pkg_version\n    )", "query_id": "20241024_065656_00066_jzmkd"}, "message": "CREATE TABLE (1 rows)", "failures": null, "unique_id": "model.elementary.metadata", "compiled": true, "compiled_code": "\n\nSELECT\n    '0.16.1' as dbt_pkg_version", "relation_name": "\"iceberg\".\"omop\".\"metadata\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:56.842313Z", "completed_at": "2024-10-24T06:56:56.873544Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:56.875540Z", "completed_at": "2024-10-24T06:56:57.226151Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3925340175628662, "adapter_response": {"_message": "CREATE TABLE (0 rows)", "rows_affected": 0, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.schema_columns_snapshot\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"schema_columns_snapshot\"\n      \n      \n    as (\n      \n\n\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as column_state_id\n\n,\n                \n        cast('dummy_string' as varchar) as full_column_name\n\n,\n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n,\n                \n        cast (True as boolean) as is_new\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as detected_at\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n\n    )", "query_id": "20241024_065656_00067_jzmkd"}, "message": "CREATE TABLE (0 rows)", "failures": null, "unique_id": "model.elementary.schema_columns_snapshot", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar) as column_state_id\n\n,\n                \n        cast('dummy_string' as varchar) as full_column_name\n\n,\n                \n        cast('dummy_string' as varchar) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar) as column_name\n\n,\n                \n        cast('dummy_string' as varchar) as data_type\n\n,\n                \n        cast (True as boolean) as is_new\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as detected_at\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "\"iceberg\".\"omop\".\"schema_columns_snapshot\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:57.243370Z", "completed_at": "2024-10-24T06:56:57.888951Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:57.890025Z", "completed_at": "2024-10-24T06:56:58.359937Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.124434471130371, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.base_table_claim\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"base_table_claim\"\n  security definer\n  as\n    \n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            insurance as \"insurance\",\n        \n            identifier as \"identifier\",\n        \n            extension as \"extension\",\n        \n            item as \"item\",\n        \n            created as \"created\",\n        \n            use as \"use\",\n        \n            diagnosis as \"diagnosis\",\n        \n            procedure as \"procedure\",\n        \n            priority as \"priority\",\n        \n            type as \"type\",\n        \n            supportinginfo as \"supportinginfo\",\n        \n            provider as \"provider\",\n        \n            meta as \"meta\",\n        \n            patient as \"patient\",\n        \n            enterer as \"enterer\",\n        \n            subtype as \"subtype\",\n        \n            id as \"id\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_claim\"\n)\n\nselect * from source\n  ", "query_id": "20241024_065658_00070_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_trino_project.base_table_claim", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            insurance as \"insurance\",\n        \n            identifier as \"identifier\",\n        \n            extension as \"extension\",\n        \n            item as \"item\",\n        \n            created as \"created\",\n        \n            use as \"use\",\n        \n            diagnosis as \"diagnosis\",\n        \n            procedure as \"procedure\",\n        \n            priority as \"priority\",\n        \n            type as \"type\",\n        \n            supportinginfo as \"supportinginfo\",\n        \n            provider as \"provider\",\n        \n            meta as \"meta\",\n        \n            patient as \"patient\",\n        \n            enterer as \"enterer\",\n        \n            subtype as \"subtype\",\n        \n            id as \"id\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_claim\"\n)\n\nselect * from source", "relation_name": "\"iceberg\".\"omop\".\"base_table_claim\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:58.381121Z", "completed_at": "2024-10-24T06:56:58.640133Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:58.641647Z", "completed_at": "2024-10-24T06:56:58.943640Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5726418495178223, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.base_table_coverage\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"base_table_coverage\"\n  security definer\n  as\n    \n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            payor as \"payor\",\n        \n            beneficiary as \"beneficiary\",\n        \n            meta as \"meta\",\n        \n            id as \"id\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_coverage\"\n)\n\nselect * from source\n  ", "query_id": "20241024_065658_00072_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_trino_project.base_table_coverage", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            payor as \"payor\",\n        \n            beneficiary as \"beneficiary\",\n        \n            meta as \"meta\",\n        \n            id as \"id\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_coverage\"\n)\n\nselect * from source", "relation_name": "\"iceberg\".\"omop\".\"base_table_coverage\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:58.979832Z", "completed_at": "2024-10-24T06:56:59.350071Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:59.351621Z", "completed_at": "2024-10-24T06:56:59.650493Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.6830959320068359, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.base_table_diagnosticreport\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"base_table_diagnosticreport\"\n  security definer\n  as\n    \n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            conclusion as \"conclusion\",\n        \n            code as \"code\",\n        \n            performer as \"performer\",\n        \n            effectivedatetime as \"effectivedatetime\",\n        \n            meta as \"meta\",\n        \n            subject as \"subject\",\n        \n            id as \"id\",\n        \n            media as \"media\",\n        \n            imagingstudy as \"imagingstudy\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\",\n        \n            presentedform as \"presentedform\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_diagnosticreport\"\n)\n\nselect * from source\n  ", "query_id": "20241024_065659_00074_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_trino_project.base_table_diagnosticreport", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            conclusion as \"conclusion\",\n        \n            code as \"code\",\n        \n            performer as \"performer\",\n        \n            effectivedatetime as \"effectivedatetime\",\n        \n            meta as \"meta\",\n        \n            subject as \"subject\",\n        \n            id as \"id\",\n        \n            media as \"media\",\n        \n            imagingstudy as \"imagingstudy\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\",\n        \n            presentedform as \"presentedform\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_diagnosticreport\"\n)\n\nselect * from source", "relation_name": "\"iceberg\".\"omop\".\"base_table_diagnosticreport\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:56:59.665860Z", "completed_at": "2024-10-24T06:56:59.912206Z"}, {"name": "execute", "started_at": "2024-10-24T06:56:59.913912Z", "completed_at": "2024-10-24T06:57:00.188280Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5287766456604004, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.base_table_documentreference\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"base_table_documentreference\"\n  security definer\n  as\n    \n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            meta as \"meta\",\n        \n            subject as \"subject\",\n        \n            id as \"id\",\n        \n            category as \"category\",\n        \n            content as \"content\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_documentreference\"\n)\n\nselect * from source\n  ", "query_id": "20241024_065700_00076_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_trino_project.base_table_documentreference", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            meta as \"meta\",\n        \n            subject as \"subject\",\n        \n            id as \"id\",\n        \n            category as \"category\",\n        \n            content as \"content\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_documentreference\"\n)\n\nselect * from source", "relation_name": "\"iceberg\".\"omop\".\"base_table_documentreference\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:00.205195Z", "completed_at": "2024-10-24T06:57:00.458370Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:00.460524Z", "completed_at": "2024-10-24T06:57:00.722204Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5261232852935791, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.base_table_encounter\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"base_table_encounter\"\n  security definer\n  as\n    \n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            servicetype as \"servicetype\",\n        \n            meta as \"meta\",\n        \n            id as \"id\",\n        \n            class as \"class\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_encounter\"\n)\n\nselect * from source\n  ", "query_id": "20241024_065700_00078_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_trino_project.base_table_encounter", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            servicetype as \"servicetype\",\n        \n            meta as \"meta\",\n        \n            id as \"id\",\n        \n            class as \"class\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_encounter\"\n)\n\nselect * from source", "relation_name": "\"iceberg\".\"omop\".\"base_table_encounter\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:00.738408Z", "completed_at": "2024-10-24T06:57:01.037505Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:01.039063Z", "completed_at": "2024-10-24T06:57:01.297555Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5647563934326172, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.base_table_imagingstudy\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"base_table_imagingstudy\"\n  security definer\n  as\n    \n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            identifier as \"identifier\",\n        \n            meta as \"meta\",\n        \n            series as \"series\",\n        \n            subject as \"subject\",\n        \n            id as \"id\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_imagingstudy\"\n)\n\nselect * from source\n  ", "query_id": "20241024_065701_00080_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_trino_project.base_table_imagingstudy", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            identifier as \"identifier\",\n        \n            meta as \"meta\",\n        \n            series as \"series\",\n        \n            subject as \"subject\",\n        \n            id as \"id\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_imagingstudy\"\n)\n\nselect * from source", "relation_name": "\"iceberg\".\"omop\".\"base_table_imagingstudy\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:01.314348Z", "completed_at": "2024-10-24T06:57:01.561339Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:01.562423Z", "completed_at": "2024-10-24T06:57:01.836514Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5293722152709961, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.base_table_media\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"base_table_media\"\n  security definer\n  as\n    \n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            bodysite as \"bodysite\",\n        \n            meta as \"meta\",\n        \n            subject as \"subject\",\n        \n            id as \"id\",\n        \n            content as \"content\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_media\"\n)\n\nselect * from source\n  ", "query_id": "20241024_065701_00082_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_trino_project.base_table_media", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            bodysite as \"bodysite\",\n        \n            meta as \"meta\",\n        \n            subject as \"subject\",\n        \n            id as \"id\",\n        \n            content as \"content\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_media\"\n)\n\nselect * from source", "relation_name": "\"iceberg\".\"omop\".\"base_table_media\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:01.852325Z", "completed_at": "2024-10-24T06:57:02.098689Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:02.100702Z", "completed_at": "2024-10-24T06:57:02.399186Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5539462566375732, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.base_table_medicationrequest\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"base_table_medicationrequest\"\n  security definer\n  as\n    \n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            dosageinstruction as \"dosageinstruction\",\n        \n            dispenserequest as \"dispenserequest\",\n        \n            meta as \"meta\",\n        \n            subject as \"subject\",\n        \n            id as \"id\",\n        \n            category as \"category\",\n        \n            medicationcodeableconcept as \"medicationcodeableconcept\",\n        \n            intent as \"intent\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\",\n        \n            statusreason as \"statusreason\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_medicationrequest\"\n)\n\nselect * from source\n  ", "query_id": "20241024_065702_00084_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_trino_project.base_table_medicationrequest", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            dosageinstruction as \"dosageinstruction\",\n        \n            dispenserequest as \"dispenserequest\",\n        \n            meta as \"meta\",\n        \n            subject as \"subject\",\n        \n            id as \"id\",\n        \n            category as \"category\",\n        \n            medicationcodeableconcept as \"medicationcodeableconcept\",\n        \n            intent as \"intent\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\",\n        \n            statusreason as \"statusreason\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_medicationrequest\"\n)\n\nselect * from source", "relation_name": "\"iceberg\".\"omop\".\"base_table_medicationrequest\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:02.424395Z", "completed_at": "2024-10-24T06:57:02.700968Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:02.702678Z", "completed_at": "2024-10-24T06:57:02.992194Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5765070915222168, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.base_table_observation\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"base_table_observation\"\n  security definer\n  as\n    \n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            valuecodeableconcept as \"valuecodeableconcept\",\n        \n            performer as \"performer\",\n        \n            code as \"code\",\n        \n            effectivedatetime as \"effectivedatetime\",\n        \n            meta as \"meta\",\n        \n            subject as \"subject\",\n        \n            id as \"id\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\",\n        \n            valuestring as \"valuestring\",\n        \n            method as \"method\",\n        \n            component as \"component\",\n        \n            interpretation as \"interpretation\",\n        \n            specimen as \"specimen\",\n        \n            derivedfrom as \"derivedfrom\",\n        \n            category as \"category\",\n        \n            referencerange as \"referencerange\",\n        \n            valuequantity as \"valuequantity\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_observation\"\n)\n\nselect * from source\n  ", "query_id": "20241024_065702_00086_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_trino_project.base_table_observation", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            valuecodeableconcept as \"valuecodeableconcept\",\n        \n            performer as \"performer\",\n        \n            code as \"code\",\n        \n            effectivedatetime as \"effectivedatetime\",\n        \n            meta as \"meta\",\n        \n            subject as \"subject\",\n        \n            id as \"id\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\",\n        \n            valuestring as \"valuestring\",\n        \n            method as \"method\",\n        \n            component as \"component\",\n        \n            interpretation as \"interpretation\",\n        \n            specimen as \"specimen\",\n        \n            derivedfrom as \"derivedfrom\",\n        \n            category as \"category\",\n        \n            referencerange as \"referencerange\",\n        \n            valuequantity as \"valuequantity\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_observation\"\n)\n\nselect * from source", "relation_name": "\"iceberg\".\"omop\".\"base_table_observation\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:03.007778Z", "completed_at": "2024-10-24T06:57:03.275593Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:03.278477Z", "completed_at": "2024-10-24T06:57:03.548052Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5473208427429199, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.base_table_organization\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"base_table_organization\"\n  security definer\n  as\n    \n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            identifier as \"identifier\",\n        \n            meta as \"meta\",\n        \n            name as \"name\",\n        \n            id as \"id\",\n        \n            type as \"type\",\n        \n            resourcetype as \"resourcetype\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_organization\"\n)\n\nselect * from source\n  ", "query_id": "20241024_065703_00088_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_trino_project.base_table_organization", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            identifier as \"identifier\",\n        \n            meta as \"meta\",\n        \n            name as \"name\",\n        \n            id as \"id\",\n        \n            type as \"type\",\n        \n            resourcetype as \"resourcetype\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_organization\"\n)\n\nselect * from source", "relation_name": "\"iceberg\".\"omop\".\"base_table_organization\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:03.565243Z", "completed_at": "2024-10-24T06:57:03.784733Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:03.787256Z", "completed_at": "2024-10-24T06:57:04.051161Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.49222302436828613, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.base_table_patient\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"base_table_patient\"\n  security definer\n  as\n    \n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            identifier as \"identifier\",\n        \n            gender as \"gender\",\n        \n            meta as \"meta\",\n        \n            name as \"name\",\n        \n            id as \"id\",\n        \n            birthdate as \"birthdate\",\n        \n            resourcetype as \"resourcetype\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_patient\"\n)\n\nselect * from source\n  ", "query_id": "20241024_065703_00090_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_trino_project.base_table_patient", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            identifier as \"identifier\",\n        \n            gender as \"gender\",\n        \n            meta as \"meta\",\n        \n            name as \"name\",\n        \n            id as \"id\",\n        \n            birthdate as \"birthdate\",\n        \n            resourcetype as \"resourcetype\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_patient\"\n)\n\nselect * from source", "relation_name": "\"iceberg\".\"omop\".\"base_table_patient\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:04.065537Z", "completed_at": "2024-10-24T06:57:04.293483Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:04.294572Z", "completed_at": "2024-10-24T06:57:04.547809Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.48902368545532227, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.base_table_practitioner\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"base_table_practitioner\"\n  security definer\n  as\n    \n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            identifier as \"identifier\",\n        \n            meta as \"meta\",\n        \n            id as \"id\",\n        \n            resourcetype as \"resourcetype\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_practitioner\"\n)\n\nselect * from source\n  ", "query_id": "20241024_065704_00092_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_trino_project.base_table_practitioner", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            identifier as \"identifier\",\n        \n            meta as \"meta\",\n        \n            id as \"id\",\n        \n            resourcetype as \"resourcetype\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_practitioner\"\n)\n\nselect * from source", "relation_name": "\"iceberg\".\"omop\".\"base_table_practitioner\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:04.563500Z", "completed_at": "2024-10-24T06:57:04.801489Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:04.803051Z", "completed_at": "2024-10-24T06:57:05.075324Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5184569358825684, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.base_table_procedure\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"base_table_procedure\"\n  security definer\n  as\n    \n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            code as \"code\",\n        \n            meta as \"meta\",\n        \n            subject as \"subject\",\n        \n            usedreference as \"usedreference\",\n        \n            id as \"id\",\n        \n            performeddatetime as \"performeddatetime\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_procedure\"\n)\n\nselect * from source\n  ", "query_id": "20241024_065704_00094_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_trino_project.base_table_procedure", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            code as \"code\",\n        \n            meta as \"meta\",\n        \n            subject as \"subject\",\n        \n            usedreference as \"usedreference\",\n        \n            id as \"id\",\n        \n            performeddatetime as \"performeddatetime\",\n        \n            resourcetype as \"resourcetype\",\n        \n            status as \"status\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_procedure\"\n)\n\nselect * from source", "relation_name": "\"iceberg\".\"omop\".\"base_table_procedure\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:05.091490Z", "completed_at": "2024-10-24T06:57:05.401778Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:05.403909Z", "completed_at": "2024-10-24T06:57:05.681814Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5961365699768066, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.base_table_specimen\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"base_table_specimen\"\n  security definer\n  as\n    \n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            meta as \"meta\",\n        \n            subject as \"subject\",\n        \n            receivedtime as \"receivedtime\",\n        \n            id as \"id\",\n        \n            type as \"type\",\n        \n            resourcetype as \"resourcetype\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_specimen\"\n)\n\nselect * from source\n  ", "query_id": "20241024_065705_00096_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_trino_project.base_table_specimen", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            meta as \"meta\",\n        \n            subject as \"subject\",\n        \n            receivedtime as \"receivedtime\",\n        \n            id as \"id\",\n        \n            type as \"type\",\n        \n            resourcetype as \"resourcetype\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_specimen\"\n)\n\nselect * from source", "relation_name": "\"iceberg\".\"omop\".\"base_table_specimen\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:05.698205Z", "completed_at": "2024-10-24T06:57:05.959915Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:05.961461Z", "completed_at": "2024-10-24T06:57:06.253111Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5613918304443359, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.base_table_substance\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"base_table_substance\"\n  security definer\n  as\n    \n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            code as \"code\",\n        \n            ingredient as \"ingredient\",\n        \n            meta as \"meta\",\n        \n            id as \"id\",\n        \n            resourcetype as \"resourcetype\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_substance\"\n)\n\nselect * from source\n  ", "query_id": "20241024_065706_00098_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_trino_project.base_table_substance", "compiled": true, "compiled_code": "\n\n\n\n\nwith source as (\n    select \n        \n            request_method as \"request_method\",\n        \n            request_url as \"request_url\",\n        \n            resource_id as \"resource_id\",\n        \n            resource_type as \"resource_type\",\n        \n            resource_status as \"resource_status\",\n        \n            full_url as \"full_url\",\n        \n            code as \"code\",\n        \n            ingredient as \"ingredient\",\n        \n            meta as \"meta\",\n        \n            id as \"id\",\n        \n            resourcetype as \"resourcetype\"\n        \n    from \"postgresql\".\"dbt\".\"fhir_data_substance\"\n)\n\nselect * from source", "relation_name": "\"iceberg\".\"omop\".\"base_table_substance\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__exposures", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"stg_dbt__exposures\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__invocations", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"stg_dbt__invocations\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__model_executions", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"stg_dbt__model_executions\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__models", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"stg_dbt__models\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__seed_executions", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"stg_dbt__seed_executions\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__seeds", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"stg_dbt__seeds\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__snapshot_executions", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"stg_dbt__snapshot_executions\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__snapshots", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"stg_dbt__snapshots\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__sources", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"stg_dbt__sources\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__test_executions", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"stg_dbt__test_executions\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.stg_dbt__tests", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"stg_dbt__tests\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:06.382503Z", "completed_at": "2024-10-24T06:57:06.445663Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:06.447285Z", "completed_at": "2024-10-24T06:57:06.858555Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.48201441764831543, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.metrics_anomaly_score\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"metrics_anomaly_score\"\n  security definer\n  as\n    \n\nwith data_monitoring_metrics as (\n\n    select * from \"iceberg\".\"omop\".\"data_monitoring_metrics\"\n\n),\n\ntime_window_aggregation as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        metric_value,\n        source_value,\n        bucket_start,\n        bucket_end,\n        bucket_duration_hours,\n        updated_at,\n        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,\n        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,\n        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,\n        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,\n        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start\n    from data_monitoring_metrics\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n),\n\nmetrics_anomaly_score as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        case\n            when training_stddev is null then null\n            when training_stddev = 0 then 0\n            else (metric_value - training_avg) / (training_stddev)\n        end as anomaly_score,\n        metric_value as latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        max(updated_at) as updated_at\n    from time_window_aggregation\n        where\n            metric_value is not null\n            and training_avg is not null\n            and bucket_end >= \n    date_add('day', cast(-7 as integer), coalesce(\n        try_cast(date_trunc('day', current_timestamp(6)) as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(date_trunc('day', current_timestamp(6)) AS varchar)) AS \n    timestamp(6)\n)\n    ))\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n    order by bucket_end desc\n\n\n),\n\nfinal as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        anomaly_score,\n        latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        updated_at,\n        case\n            when abs(anomaly_score) > 3 then true\n            else false end\n        as is_anomaly\n    from metrics_anomaly_score\n)\n\nselect * from final\n  ", "query_id": "20241024_065706_00099_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.elementary.metrics_anomaly_score", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from \"iceberg\".\"omop\".\"data_monitoring_metrics\"\n\n),\n\ntime_window_aggregation as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        metric_value,\n        source_value,\n        bucket_start,\n        bucket_end,\n        bucket_duration_hours,\n        updated_at,\n        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,\n        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,\n        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,\n        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,\n        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start\n    from data_monitoring_metrics\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n),\n\nmetrics_anomaly_score as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        case\n            when training_stddev is null then null\n            when training_stddev = 0 then 0\n            else (metric_value - training_avg) / (training_stddev)\n        end as anomaly_score,\n        metric_value as latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        max(updated_at) as updated_at\n    from time_window_aggregation\n        where\n            metric_value is not null\n            and training_avg is not null\n            and bucket_end >= \n    date_add('day', cast(-7 as integer), coalesce(\n        try_cast(date_trunc('day', current_timestamp(6)) as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(date_trunc('day', current_timestamp(6)) AS varchar)) AS \n    timestamp(6)\n)\n    ))\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n    order by bucket_end desc\n\n\n),\n\nfinal as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        anomaly_score,\n        latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        updated_at,\n        case\n            when abs(anomaly_score) > 3 then true\n            else false end\n        as is_anomaly\n    from metrics_anomaly_score\n)\n\nselect * from final", "relation_name": "\"iceberg\".\"omop\".\"metrics_anomaly_score\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:06.874901Z", "completed_at": "2024-10-24T06:57:06.888989Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:06.891223Z", "completed_at": "2024-10-24T06:57:07.026985Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.15990281105041504, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.monitors_runs\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"monitors_runs\"\n  security definer\n  as\n    \n\nwith data_monitoring_metrics as (\n\n    select * from \"iceberg\".\"omop\".\"data_monitoring_metrics\"\n\n),\n\nmax_bucket_end as (\n\n    select full_table_name,\n           column_name,\n           metric_name,\n           metric_properties,\n           max(bucket_end) as last_bucket_end,\n           min(bucket_end) as first_bucket_end\n    from data_monitoring_metrics\n    group by 1,2,3,4\n\n)\n\nselect * from max_bucket_end\n  ", "query_id": "20241024_065706_00100_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.elementary.monitors_runs", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from \"iceberg\".\"omop\".\"data_monitoring_metrics\"\n\n),\n\nmax_bucket_end as (\n\n    select full_table_name,\n           column_name,\n           metric_name,\n           metric_properties,\n           max(bucket_end) as last_bucket_end,\n           min(bucket_end) as first_bucket_end\n    from data_monitoring_metrics\n    group by 1,2,3,4\n\n)\n\nselect * from max_bucket_end", "relation_name": "\"iceberg\".\"omop\".\"monitors_runs\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:07.044703Z", "completed_at": "2024-10-24T06:57:07.110604Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:07.112843Z", "completed_at": "2024-10-24T06:57:07.700429Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.6641988754272461, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.job_run_results\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"job_run_results\"\n  security definer\n  as\n    \n\n\n\n\n\nwith jobs as (\n  select\n    job_name,\n    job_id,\n    job_run_id,\n    \nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as job_run_started_at,\n    \nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as job_run_completed_at,\n    \n    (((((to_milliseconds((CAST(CAST(coalesce(\n        try_cast(\nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(\nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n AS varchar)) AS \n    timestamp(6)\n)\n    ) AS TIMESTAMP) AS DATE) - CAST(CAST(coalesce(\n        try_cast(\nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(\nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n AS varchar)) AS \n    timestamp(6)\n)\n    ) AS TIMESTAMP) AS DATE)))) / 86400000) * 24 + hour(CAST(coalesce(\n        try_cast(\nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(\nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n AS varchar)) AS \n    timestamp(6)\n)\n    ) AS TIMESTAMP)) - hour(CAST(coalesce(\n        try_cast(\nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(\nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n AS varchar)) AS \n    timestamp(6)\n)\n    ) AS TIMESTAMP))) * 60 + minute(CAST(coalesce(\n        try_cast(\nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(\nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n AS varchar)) AS \n    timestamp(6)\n)\n    ) AS TIMESTAMP)) - minute(CAST(coalesce(\n        try_cast(\nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(\nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n AS varchar)) AS \n    timestamp(6)\n)\n    ) AS TIMESTAMP))) * 60 + second(CAST(coalesce(\n        try_cast(\nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(\nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n AS varchar)) AS \n    timestamp(6)\n)\n    ) AS TIMESTAMP)) - second(CAST(coalesce(\n        try_cast(\nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(\nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n AS varchar)) AS \n    timestamp(6)\n)\n    ) AS TIMESTAMP)))\n as job_run_execution_time\n  from \"iceberg\".\"omop\".\"dbt_invocations\"\n  where job_id is not null\n  group by job_name, job_id, job_run_id\n)\n\nselect\n  job_name as name,\n  job_id as id,\n  job_run_id as run_id,\n  job_run_started_at as run_started_at,\n  job_run_completed_at as run_completed_at,\n  job_run_execution_time as run_execution_time\nfrom jobs\n  ", "query_id": "20241024_065707_00101_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.elementary.job_run_results", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith jobs as (\n  select\n    job_name,\n    job_id,\n    job_run_id,\n    \nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as job_run_started_at,\n    \nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as job_run_completed_at,\n    \n    (((((to_milliseconds((CAST(CAST(coalesce(\n        try_cast(\nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(\nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n AS varchar)) AS \n    timestamp(6)\n)\n    ) AS TIMESTAMP) AS DATE) - CAST(CAST(coalesce(\n        try_cast(\nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(\nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n AS varchar)) AS \n    timestamp(6)\n)\n    ) AS TIMESTAMP) AS DATE)))) / 86400000) * 24 + hour(CAST(coalesce(\n        try_cast(\nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(\nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n AS varchar)) AS \n    timestamp(6)\n)\n    ) AS TIMESTAMP)) - hour(CAST(coalesce(\n        try_cast(\nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(\nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n AS varchar)) AS \n    timestamp(6)\n)\n    ) AS TIMESTAMP))) * 60 + minute(CAST(coalesce(\n        try_cast(\nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(\nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n AS varchar)) AS \n    timestamp(6)\n)\n    ) AS TIMESTAMP)) - minute(CAST(coalesce(\n        try_cast(\nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(\nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n AS varchar)) AS \n    timestamp(6)\n)\n    ) AS TIMESTAMP))) * 60 + second(CAST(coalesce(\n        try_cast(\nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(\nmax(coalesce(\n        try_cast(run_completed_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_completed_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n AS varchar)) AS \n    timestamp(6)\n)\n    ) AS TIMESTAMP)) - second(CAST(coalesce(\n        try_cast(\nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(\nmin(coalesce(\n        try_cast(run_started_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(run_started_at AS varchar)) AS \n    timestamp(6)\n)\n    ))\n AS varchar)) AS \n    timestamp(6)\n)\n    ) AS TIMESTAMP)))\n as job_run_execution_time\n  from \"iceberg\".\"omop\".\"dbt_invocations\"\n  where job_id is not null\n  group by job_name, job_id, job_run_id\n)\n\nselect\n  job_name as name,\n  job_id as id,\n  job_run_id as run_id,\n  job_run_started_at as run_started_at,\n  job_run_completed_at as run_completed_at,\n  job_run_execution_time as run_execution_time\nfrom jobs", "relation_name": "\"iceberg\".\"omop\".\"job_run_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:07.715667Z", "completed_at": "2024-10-24T06:57:07.737085Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:07.739087Z", "completed_at": "2024-10-24T06:57:08.064935Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3574666976928711, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.model_run_results\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"model_run_results\"\n  security definer\n  as\n    \n\nwith dbt_run_results as (\n    select * from \"iceberg\".\"omop\".\"dbt_run_results\"\n),\n\ndbt_models as (\n    select * from \"iceberg\".\"omop\".\"dbt_models\"\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    models.database_name,\n    models.schema_name,\n    coalesce(run_results.materialization, models.materialization) as materialization,\n    models.tags,\n    models.package_name,\n    models.path,\n    models.original_path,\n    models.owner,\n    models.alias,\n    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,\n    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc('day', cast(run_results.generated_at as \n    timestamp(6)\n))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_first_invocation_of_the_day,\n    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc('day', cast(run_results.generated_at as \n    timestamp(6)\n))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_last_invocation_of_the_day\n    \nFROM dbt_run_results run_results\nJOIN dbt_models models ON run_results.unique_id = models.unique_id\n  ", "query_id": "20241024_065707_00102_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.elementary.model_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from \"iceberg\".\"omop\".\"dbt_run_results\"\n),\n\ndbt_models as (\n    select * from \"iceberg\".\"omop\".\"dbt_models\"\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    models.database_name,\n    models.schema_name,\n    coalesce(run_results.materialization, models.materialization) as materialization,\n    models.tags,\n    models.package_name,\n    models.path,\n    models.original_path,\n    models.owner,\n    models.alias,\n    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,\n    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc('day', cast(run_results.generated_at as \n    timestamp(6)\n))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_first_invocation_of_the_day,\n    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc('day', cast(run_results.generated_at as \n    timestamp(6)\n))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_last_invocation_of_the_day\n    \nFROM dbt_run_results run_results\nJOIN dbt_models models ON run_results.unique_id = models.unique_id", "relation_name": "\"iceberg\".\"omop\".\"model_run_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:08.084144Z", "completed_at": "2024-10-24T06:57:08.104961Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:08.106529Z", "completed_at": "2024-10-24T06:57:08.296338Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2188112735748291, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.seed_run_results\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"seed_run_results\"\n  security definer\n  as\n    \n\nwith dbt_run_results as (\n    select * from \"iceberg\".\"omop\".\"dbt_run_results\"\n),\n\ndbt_seeds as (\n    select * from \"iceberg\".\"omop\".\"dbt_seeds\"\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    seeds.database_name,\n    seeds.schema_name,\n    run_results.materialization,\n    seeds.tags,\n    seeds.package_name,\n    seeds.path,\n    seeds.original_path,\n    seeds.owner,\n    seeds.alias\nFROM dbt_run_results run_results\nJOIN dbt_seeds seeds ON run_results.unique_id = seeds.unique_id\n  ", "query_id": "20241024_065708_00103_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.elementary.seed_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from \"iceberg\".\"omop\".\"dbt_run_results\"\n),\n\ndbt_seeds as (\n    select * from \"iceberg\".\"omop\".\"dbt_seeds\"\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    seeds.database_name,\n    seeds.schema_name,\n    run_results.materialization,\n    seeds.tags,\n    seeds.package_name,\n    seeds.path,\n    seeds.original_path,\n    seeds.owner,\n    seeds.alias\nFROM dbt_run_results run_results\nJOIN dbt_seeds seeds ON run_results.unique_id = seeds.unique_id", "relation_name": "\"iceberg\".\"omop\".\"seed_run_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:08.311563Z", "completed_at": "2024-10-24T06:57:08.326368Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:08.327580Z", "completed_at": "2024-10-24T06:57:08.611920Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3077821731567383, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.snapshot_run_results\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"snapshot_run_results\"\n  security definer\n  as\n    \n\nwith dbt_run_results as (\n    select * from \"iceberg\".\"omop\".\"dbt_run_results\"\n),\n\ndbt_snapshots as (\n    select * from \"iceberg\".\"omop\".\"dbt_snapshots\"\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    snapshots.database_name,\n    snapshots.schema_name,\n    coalesce(run_results.materialization, snapshots.materialization) as materialization,\n    snapshots.tags,\n    snapshots.package_name,\n    snapshots.path,\n    snapshots.original_path,\n    snapshots.owner,\n    snapshots.alias\nFROM dbt_run_results run_results\nJOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id\n  ", "query_id": "20241024_065708_00104_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.elementary.snapshot_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from \"iceberg\".\"omop\".\"dbt_run_results\"\n),\n\ndbt_snapshots as (\n    select * from \"iceberg\".\"omop\".\"dbt_snapshots\"\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    snapshots.database_name,\n    snapshots.schema_name,\n    coalesce(run_results.materialization, snapshots.materialization) as materialization,\n    snapshots.tags,\n    snapshots.package_name,\n    snapshots.path,\n    snapshots.original_path,\n    snapshots.owner,\n    snapshots.alias\nFROM dbt_run_results run_results\nJOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id", "relation_name": "\"iceberg\".\"omop\".\"snapshot_run_results\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:08.636535Z", "completed_at": "2024-10-24T06:57:08.662668Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:08.665605Z", "completed_at": "2024-10-24T06:57:08.950198Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.32529711723327637, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.alerts_dbt_source_freshness\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"alerts_dbt_source_freshness\"\n  security definer\n  as\n    \n\nwith results as (\n  select * from \"iceberg\".\"omop\".\"dbt_source_freshness_results\"\n),\n\nsources as (\n  select * from \"iceberg\".\"omop\".\"dbt_sources\"\n)\n\nselect\n  results.source_freshness_execution_id as alert_id,\n  results.max_loaded_at,\n  results.snapshotted_at,\n  coalesce(\n        try_cast(results.generated_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(results.generated_at AS varchar)) AS \n    timestamp(6)\n)\n    ) as detected_at,\n  results.max_loaded_at_time_ago_in_s,\n  results.status,\n  results.error,\n  results.warn_after,\n  results.error_after,\n  results.filter,\n  sources.unique_id,\n  sources.database_name,\n  sources.schema_name,\n  sources.source_name,\n  sources.identifier,\n  sources.tags,\n  sources.meta,\n  sources.owner,\n  sources.package_name,\n  sources.path,\n  -- These columns below are deprecated. We add them since this view\n  -- was used to be loaded into an incremental model with those columns, their names were later changed\n  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -\n  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge\n  results.error_after as freshness_error_after,\n  results.warn_after as freshness_warn_after,\n  results.filter as freshness_filter\nfrom results\njoin sources on results.unique_id = sources.unique_id\nwhere True and lower(status) != 'pass'\n  ", "query_id": "20241024_065708_00105_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.elementary.alerts_dbt_source_freshness", "compiled": true, "compiled_code": "\n\nwith results as (\n  select * from \"iceberg\".\"omop\".\"dbt_source_freshness_results\"\n),\n\nsources as (\n  select * from \"iceberg\".\"omop\".\"dbt_sources\"\n)\n\nselect\n  results.source_freshness_execution_id as alert_id,\n  results.max_loaded_at,\n  results.snapshotted_at,\n  coalesce(\n        try_cast(results.generated_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(results.generated_at AS varchar)) AS \n    timestamp(6)\n)\n    ) as detected_at,\n  results.max_loaded_at_time_ago_in_s,\n  results.status,\n  results.error,\n  results.warn_after,\n  results.error_after,\n  results.filter,\n  sources.unique_id,\n  sources.database_name,\n  sources.schema_name,\n  sources.source_name,\n  sources.identifier,\n  sources.tags,\n  sources.meta,\n  sources.owner,\n  sources.package_name,\n  sources.path,\n  -- These columns below are deprecated. We add them since this view\n  -- was used to be loaded into an incremental model with those columns, their names were later changed\n  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -\n  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge\n  results.error_after as freshness_error_after,\n  results.warn_after as freshness_warn_after,\n  results.filter as freshness_filter\nfrom results\njoin sources on results.unique_id = sources.unique_id\nwhere True and lower(status) != 'pass'", "relation_name": "\"iceberg\".\"omop\".\"alerts_dbt_source_freshness\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:08.969750Z", "completed_at": "2024-10-24T06:57:08.991258Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:08.992879Z", "completed_at": "2024-10-24T06:57:09.334412Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3752455711364746, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.dbt_artifacts_hashes\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"dbt_artifacts_hashes\"\n  security definer\n  as\n    \n\n\n\n\nselect\n  'dbt_models' as artifacts_model,\n   metadata_hash\nfrom \"iceberg\".\"omop\".\"dbt_models\"\n union all \n\nselect\n  'dbt_tests' as artifacts_model,\n   metadata_hash\nfrom \"iceberg\".\"omop\".\"dbt_tests\"\n union all \n\nselect\n  'dbt_sources' as artifacts_model,\n   metadata_hash\nfrom \"iceberg\".\"omop\".\"dbt_sources\"\n union all \n\nselect\n  'dbt_snapshots' as artifacts_model,\n   metadata_hash\nfrom \"iceberg\".\"omop\".\"dbt_snapshots\"\n union all \n\nselect\n  'dbt_metrics' as artifacts_model,\n   metadata_hash\nfrom \"iceberg\".\"omop\".\"dbt_metrics\"\n union all \n\nselect\n  'dbt_exposures' as artifacts_model,\n   metadata_hash\nfrom \"iceberg\".\"omop\".\"dbt_exposures\"\n union all \n\nselect\n  'dbt_seeds' as artifacts_model,\n   metadata_hash\nfrom \"iceberg\".\"omop\".\"dbt_seeds\"\n union all \n\nselect\n  'dbt_columns' as artifacts_model,\n   metadata_hash\nfrom \"iceberg\".\"omop\".\"dbt_columns\"\n\n\norder by metadata_hash\n  ", "query_id": "20241024_065709_00106_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.elementary.dbt_artifacts_hashes", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n  'dbt_models' as artifacts_model,\n   metadata_hash\nfrom \"iceberg\".\"omop\".\"dbt_models\"\n union all \n\nselect\n  'dbt_tests' as artifacts_model,\n   metadata_hash\nfrom \"iceberg\".\"omop\".\"dbt_tests\"\n union all \n\nselect\n  'dbt_sources' as artifacts_model,\n   metadata_hash\nfrom \"iceberg\".\"omop\".\"dbt_sources\"\n union all \n\nselect\n  'dbt_snapshots' as artifacts_model,\n   metadata_hash\nfrom \"iceberg\".\"omop\".\"dbt_snapshots\"\n union all \n\nselect\n  'dbt_metrics' as artifacts_model,\n   metadata_hash\nfrom \"iceberg\".\"omop\".\"dbt_metrics\"\n union all \n\nselect\n  'dbt_exposures' as artifacts_model,\n   metadata_hash\nfrom \"iceberg\".\"omop\".\"dbt_exposures\"\n union all \n\nselect\n  'dbt_seeds' as artifacts_model,\n   metadata_hash\nfrom \"iceberg\".\"omop\".\"dbt_seeds\"\n union all \n\nselect\n  'dbt_columns' as artifacts_model,\n   metadata_hash\nfrom \"iceberg\".\"omop\".\"dbt_columns\"\n\n\norder by metadata_hash", "relation_name": "\"iceberg\".\"omop\".\"dbt_artifacts_hashes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:09.353482Z", "completed_at": "2024-10-24T06:57:09.373053Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:09.375284Z", "completed_at": "2024-10-24T06:57:09.566169Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.22201848030090332, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.alerts_anomaly_detection\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"alerts_anomaly_detection\"\n  security definer\n  as\n    \n\nwith elementary_test_results as (\n    select * from \"iceberg\".\"omop\".\"elementary_test_results\"\n),\n\nalerts_anomaly_detection as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'\n)\n\nselect * from alerts_anomaly_detection\n  ", "query_id": "20241024_065709_00107_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.elementary.alerts_anomaly_detection", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from \"iceberg\".\"omop\".\"elementary_test_results\"\n),\n\nalerts_anomaly_detection as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'\n)\n\nselect * from alerts_anomaly_detection", "relation_name": "\"iceberg\".\"omop\".\"alerts_anomaly_detection\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:09.585423Z", "completed_at": "2024-10-24T06:57:09.603059Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:09.606365Z", "completed_at": "2024-10-24T06:57:09.758506Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.17982721328735352, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.alerts_dbt_tests\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"alerts_dbt_tests\"\n  security definer\n  as\n    \n\nwith elementary_test_results as (\n    select * from \"iceberg\".\"omop\".\"elementary_test_results\"\n),\n\nalerts_dbt_tests as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'\n)\n\nselect * from alerts_dbt_tests\n  ", "query_id": "20241024_065709_00108_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.elementary.alerts_dbt_tests", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from \"iceberg\".\"omop\".\"elementary_test_results\"\n),\n\nalerts_dbt_tests as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'\n)\n\nselect * from alerts_dbt_tests", "relation_name": "\"iceberg\".\"omop\".\"alerts_dbt_tests\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:09.774936Z", "completed_at": "2024-10-24T06:57:09.794048Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:09.795708Z", "completed_at": "2024-10-24T06:57:09.942408Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.17437219619750977, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.alerts_schema_changes\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"alerts_schema_changes\"\n  security definer\n  as\n    \n\n\nwith elementary_test_results as (\n    select * from \"iceberg\".\"omop\".\"elementary_test_results\"\n),\n\nalerts_schema_changes as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'\n)\n\nselect * from alerts_schema_changes\n  ", "query_id": "20241024_065709_00109_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.elementary.alerts_schema_changes", "compiled": true, "compiled_code": "\n\n\nwith elementary_test_results as (\n    select * from \"iceberg\".\"omop\".\"elementary_test_results\"\n),\n\nalerts_schema_changes as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'\n)\n\nselect * from alerts_schema_changes", "relation_name": "\"iceberg\".\"omop\".\"alerts_schema_changes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:09.956273Z", "completed_at": "2024-10-24T06:57:09.977473Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:09.979472Z", "completed_at": "2024-10-24T06:57:10.361964Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.41225385665893555, "adapter_response": {"_message": "CREATE TABLE (0 rows)", "rows_affected": 0, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.test_result_rows\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"test_result_rows\"\n      \n      \n    as (\n      -- indexes are not supported in all warehouses, relevant to postgres only\n\n\n-- depends_on: \"iceberg\".\"omop\".\"elementary_test_results\"\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as elementary_test_results_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as result_row\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as detected_at\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n    )", "query_id": "20241024_065710_00110_jzmkd"}, "message": "CREATE TABLE (0 rows)", "failures": null, "unique_id": "model.elementary.test_result_rows", "compiled": true, "compiled_code": "-- indexes are not supported in all warehouses, relevant to postgres only\n\n\n-- depends_on: \"iceberg\".\"omop\".\"elementary_test_results\"\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as elementary_test_results_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as varchar) as result_row\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as detected_at\n\n,\n                cast('2091-02-17' as \n    timestamp(6)\n) as created_at\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"iceberg\".\"omop\".\"test_result_rows\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:10.380307Z", "completed_at": "2024-10-24T06:57:10.399707Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:10.401962Z", "completed_at": "2024-10-24T06:57:11.906674Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.5342662334442139, "adapter_response": {"_message": "CREATE TABLE (1 rows)", "rows_affected": 1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.omop_visit_occurrence\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"omop_visit_occurrence__dbt_tmp\"\n      \n      \n    as (\n      \n\n\nSELECT\n  'resource_id' as \"visit_occurence_id\", --\u53d6value\n  serviceType as \"visit_source_value\", --\u8a2a\u8996\u539f\u59cb\u6578\u64da\n-- jsonb_array_elements(location::jsonb) -> location -> managingOrganization ->> identifier as \"care_site_id\", --\u7f3a\u6f0f\n--jsonb_array_elements(location::jsonb) -> 'location' ->> 'display'  as \"care_site_id\", --\u7f3a\u6f0f\n--'unknown' as \"admitting_from_concept_id\", --\u5165\u9662\u4f86\u6e90id\n--'unknown' as \"admitting_from_source_value\", --\u5165\u9662\u4f86\u6e90\u7684 \u539f\u59cb\u63cf\u8ff0\u503c\n--'unknown' as \"admitting_from_source_concept_id\", --\u5165\u9662\u4f86\u6e90\u7684\u6a19\u6e96\u5316\u6982\u5ff5\u7684\u9032\u4e00\u6b65\u5206\u985e\n--'unknown' as \"discharge_to_concept_id\", --\u51fa\u9662\u53bb\u5411\u8b58\u5225\u78bc\n--'unknown' as \"discharge_to_source_value\", --\u51fa\u9662\u53bb\u5411\u63cf\u8ff0\n--'partOf' as \"preceding_visit_occurence\", --\u524d\u4e00\u6b21\u8a2a\u8996\u7d00\u9304\n--'subject.identifier' as \"person_id\",\n-- jsonb_array_elements(subject::jsonb) ->> 'identifier' as \"person_id\", --\u7f3a\u6f0f\n--jsonb_array_elements(type::jsonb) ->> 'id' as \"visit_concept_id\", -- \u7f3a\u6f0f\n--jsonb_array_elements(type::jsonb) ->> 'text' as \"visit_source_value2\", -- \u7f3a\u6f0f\n\n--period::jsonb ->> 'start' as \"visit_start_date\", -- \u7f3a\u6f0f\n--period::jsonb ->> 'start' as \"visit_start_datetime\", -- \u7f3a\u6f0f\n--period::jsonb ->> 'start' as \"visit_end_date\", -- \u7f3a\u6f0f\n--period::jsonb ->> 'start' as \"visit_end_datetime\", -- \u7f3a\u6f0f\n--'unknown' as \"visit_type_concept_id\", --\u4e0d\u660e  \u8a2a\u8996\u985e\u578b\u4ee3\u78bc\n  json_extract_scalar(class, '$.code') as \"visit_type_source_value\", --\u8a2a\u8996\u985e\u578b\u539f\u59cb \u6025\u8a3a \u4f4f\u9662 \u9580\u8a3a\n--'performer.identifier' as \"provider_id\"\n  'identifier' as \"provider_id\", -- \u7f3a\u6f0f performer\n  current_timestamp as create_time\n\n\n\nFROM \n  \"iceberg\".\"omop\".\"base_table_encounter\"\n    )", "query_id": "20241024_065710_00112_jzmkd"}, "message": "CREATE TABLE (1 rows)", "failures": null, "unique_id": "model.my_dbt_trino_project.omop_visit_occurrence", "compiled": true, "compiled_code": "\n\n\nSELECT\n  'resource_id' as \"visit_occurence_id\", --\u53d6value\n  serviceType as \"visit_source_value\", --\u8a2a\u8996\u539f\u59cb\u6578\u64da\n-- jsonb_array_elements(location::jsonb) -> location -> managingOrganization ->> identifier as \"care_site_id\", --\u7f3a\u6f0f\n--jsonb_array_elements(location::jsonb) -> 'location' ->> 'display'  as \"care_site_id\", --\u7f3a\u6f0f\n--'unknown' as \"admitting_from_concept_id\", --\u5165\u9662\u4f86\u6e90id\n--'unknown' as \"admitting_from_source_value\", --\u5165\u9662\u4f86\u6e90\u7684 \u539f\u59cb\u63cf\u8ff0\u503c\n--'unknown' as \"admitting_from_source_concept_id\", --\u5165\u9662\u4f86\u6e90\u7684\u6a19\u6e96\u5316\u6982\u5ff5\u7684\u9032\u4e00\u6b65\u5206\u985e\n--'unknown' as \"discharge_to_concept_id\", --\u51fa\u9662\u53bb\u5411\u8b58\u5225\u78bc\n--'unknown' as \"discharge_to_source_value\", --\u51fa\u9662\u53bb\u5411\u63cf\u8ff0\n--'partOf' as \"preceding_visit_occurence\", --\u524d\u4e00\u6b21\u8a2a\u8996\u7d00\u9304\n--'subject.identifier' as \"person_id\",\n-- jsonb_array_elements(subject::jsonb) ->> 'identifier' as \"person_id\", --\u7f3a\u6f0f\n--jsonb_array_elements(type::jsonb) ->> 'id' as \"visit_concept_id\", -- \u7f3a\u6f0f\n--jsonb_array_elements(type::jsonb) ->> 'text' as \"visit_source_value2\", -- \u7f3a\u6f0f\n\n--period::jsonb ->> 'start' as \"visit_start_date\", -- \u7f3a\u6f0f\n--period::jsonb ->> 'start' as \"visit_start_datetime\", -- \u7f3a\u6f0f\n--period::jsonb ->> 'start' as \"visit_end_date\", -- \u7f3a\u6f0f\n--period::jsonb ->> 'start' as \"visit_end_datetime\", -- \u7f3a\u6f0f\n--'unknown' as \"visit_type_concept_id\", --\u4e0d\u660e  \u8a2a\u8996\u985e\u578b\u4ee3\u78bc\n  json_extract_scalar(class, '$.code') as \"visit_type_source_value\", --\u8a2a\u8996\u985e\u578b\u539f\u59cb \u6025\u8a3a \u4f4f\u9662 \u9580\u8a3a\n--'performer.identifier' as \"provider_id\"\n  'identifier' as \"provider_id\", -- \u7f3a\u6f0f performer\n  current_timestamp as create_time\n\n\n\nFROM \n  \"iceberg\".\"omop\".\"base_table_encounter\"", "relation_name": "\"iceberg\".\"omop\".\"omop_visit_occurrence\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:11.930027Z", "completed_at": "2024-10-24T06:57:11.948361Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:11.950576Z", "completed_at": "2024-10-24T06:57:13.106458Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.187133550643921, "adapter_response": {"_message": "CREATE TABLE (5 rows)", "rows_affected": 5, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.omop_measurement\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"omop_measurement__dbt_tmp\"\n      \n      \n    as (\n      \n\nSELECT\n  substring(resource_id, -36) as \"observation_id\",  -- \u91ab\u7642\u89c0\u5bdf\u7d00\u9304id\n  json_extract_scalar(json_extract(valueQuantity, '$.unit'), '$') AS \"unit_concept_id\",  --\u89c0\u5bdf\u7d50\u679c\u7684\u55ae\u4f4d\uff08unit\uff09\u61c9\u63db\u6210\u4ee3\u865fid\n  json_extract_scalar(json_array_get(referenceRange, 0), '$.low.value') AS \"range_low\",\n  json_extract_scalar(json_array_get(referenceRange, 0), '$.high.value') AS \"range_high\",\n  json_extract_scalar(json_array_get(performer, 0), '$.reference') AS \"provider_id\",--\u91ab\u7642\u63d0\u4f9b\u8005id\n  resource_id AS \"visit_occurrence_id\",--\u5c31\u8a3aid\n  --substring(code from '\"code\": \"([^\"]+)\"') as \"measurement_source_value\", --\u4e0d\u77e5\u9053\u53d6\u54ea\u500b \n  json_extract_scalar(subject, '$.reference') AS \"person_id\",\n  --substring(code from '\"code\": \"([^\"]+)\"') as \"measurement_concept_id\",  --\u4e0d\u77e5\u9053\u53d6\u54ea\u500b \n  \"effectiveDateTime\" as \"observation_date\",\n  \"effectiveDateTime\" as \"observation_datetime\",\n  json_extract_scalar(json_extract(valueQuantity, '$.value'), '$') AS \"value_as_number\",--\u91cf\u6e2c\u7d50\u679c\n  json_extract_scalar(json_array_get(json_extract(valuecodeableconcept, '$.coding'), 0), '$.code') AS \"value_as_concept_id\",\n  current_timestamp as create_time\nFROM \n  \"iceberg\".\"omop\".\"base_table_observation\"\n    )", "query_id": "20241024_065712_00116_jzmkd"}, "message": "CREATE TABLE (5 rows)", "failures": null, "unique_id": "model.my_dbt_trino_project.omop_measurement", "compiled": true, "compiled_code": "\n\nSELECT\n  substring(resource_id, -36) as \"observation_id\",  -- \u91ab\u7642\u89c0\u5bdf\u7d00\u9304id\n  json_extract_scalar(json_extract(valueQuantity, '$.unit'), '$') AS \"unit_concept_id\",  --\u89c0\u5bdf\u7d50\u679c\u7684\u55ae\u4f4d\uff08unit\uff09\u61c9\u63db\u6210\u4ee3\u865fid\n  json_extract_scalar(json_array_get(referenceRange, 0), '$.low.value') AS \"range_low\",\n  json_extract_scalar(json_array_get(referenceRange, 0), '$.high.value') AS \"range_high\",\n  json_extract_scalar(json_array_get(performer, 0), '$.reference') AS \"provider_id\",--\u91ab\u7642\u63d0\u4f9b\u8005id\n  resource_id AS \"visit_occurrence_id\",--\u5c31\u8a3aid\n  --substring(code from '\"code\": \"([^\"]+)\"') as \"measurement_source_value\", --\u4e0d\u77e5\u9053\u53d6\u54ea\u500b \n  json_extract_scalar(subject, '$.reference') AS \"person_id\",\n  --substring(code from '\"code\": \"([^\"]+)\"') as \"measurement_concept_id\",  --\u4e0d\u77e5\u9053\u53d6\u54ea\u500b \n  \"effectiveDateTime\" as \"observation_date\",\n  \"effectiveDateTime\" as \"observation_datetime\",\n  json_extract_scalar(json_extract(valueQuantity, '$.value'), '$') AS \"value_as_number\",--\u91cf\u6e2c\u7d50\u679c\n  json_extract_scalar(json_array_get(json_extract(valuecodeableconcept, '$.coding'), 0), '$.code') AS \"value_as_concept_id\",\n  current_timestamp as create_time\nFROM \n  \"iceberg\".\"omop\".\"base_table_observation\"", "relation_name": "\"iceberg\".\"omop\".\"omop_measurement\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:13.133610Z", "completed_at": "2024-10-24T06:57:13.162550Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:13.164232Z", "completed_at": "2024-10-24T06:57:14.459001Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.3348634243011475, "adapter_response": {"_message": "CREATE TABLE (5 rows)", "rows_affected": 5, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.omop_observation\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"omop_observation__dbt_tmp\"\n      \n      \n    as (\n      --OK\n\n\nSELECT\n\n  substring(resource_id, -36) as \"observation_id\",  -- \u91ab\u7642\u89c0\u5bdf\u7d00\u9304id\n  json_extract_scalar(json_extract(valueQuantity, '$.unit'), '$') AS \"unit_concept_id\",  --\u89c0\u5bdf\u7d50\u679c\u7684\u55ae\u4f4d\uff08unit\uff09\u61c9\u63db\u6210\u4ee3\u865fid\n  json_extract_scalar(json_array_get(performer, 0), '$.reference') AS \"provider_id\",--\u91ab\u7642\u63d0\u4f9b\u8005id\n  resource_id AS \"visit_occurrence_id\",--\u5c31\u8a3aid\n  json_extract_scalar(subject, '$.reference') AS \"person_id\",\n  json_extract_scalar(json_array_get(json_extract(code, '$.coding'), 0), '$.code') AS \"observation_concept_id\",\n  \"effectiveDateTime\" as \"observation_date\",\n  \"effectiveDateTime\" as \"observation_datetime\",\n  json_extract_scalar(json_extract(valueQuantity, '$.value'), '$') AS \"value_as_number\",--\u91cf\u6e2c\u7d50\u679c\n  valueString AS \"value_as_string\",--\u89c0\u5bdf\u7d50\u679c\n  json_extract_scalar(json_array_get(json_extract(valuecodeableconcept, '$.coding'), 0), '$.code') AS \"value_as_concept_id\",\n  current_timestamp as create_time\n\nFROM \"iceberg\".\"omop\".\"base_table_observation\"\n    )", "query_id": "20241024_065713_00120_jzmkd"}, "message": "CREATE TABLE (5 rows)", "failures": null, "unique_id": "model.my_dbt_trino_project.omop_observation", "compiled": true, "compiled_code": "--OK\n\n\nSELECT\n\n  substring(resource_id, -36) as \"observation_id\",  -- \u91ab\u7642\u89c0\u5bdf\u7d00\u9304id\n  json_extract_scalar(json_extract(valueQuantity, '$.unit'), '$') AS \"unit_concept_id\",  --\u89c0\u5bdf\u7d50\u679c\u7684\u55ae\u4f4d\uff08unit\uff09\u61c9\u63db\u6210\u4ee3\u865fid\n  json_extract_scalar(json_array_get(performer, 0), '$.reference') AS \"provider_id\",--\u91ab\u7642\u63d0\u4f9b\u8005id\n  resource_id AS \"visit_occurrence_id\",--\u5c31\u8a3aid\n  json_extract_scalar(subject, '$.reference') AS \"person_id\",\n  json_extract_scalar(json_array_get(json_extract(code, '$.coding'), 0), '$.code') AS \"observation_concept_id\",\n  \"effectiveDateTime\" as \"observation_date\",\n  \"effectiveDateTime\" as \"observation_datetime\",\n  json_extract_scalar(json_extract(valueQuantity, '$.value'), '$') AS \"value_as_number\",--\u91cf\u6e2c\u7d50\u679c\n  valueString AS \"value_as_string\",--\u89c0\u5bdf\u7d50\u679c\n  json_extract_scalar(json_array_get(json_extract(valuecodeableconcept, '$.coding'), 0), '$.code') AS \"value_as_concept_id\",\n  current_timestamp as create_time\n\nFROM \"iceberg\".\"omop\".\"base_table_observation\"", "relation_name": "\"iceberg\".\"omop\".\"omop_observation\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:14.477571Z", "completed_at": "2024-10-24T06:57:14.506347Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:14.511860Z", "completed_at": "2024-10-24T06:57:15.498235Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.0291047096252441, "adapter_response": {"_message": "CREATE TABLE (3 rows)", "rows_affected": 3, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.omop_care_site\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"omop_care_site__dbt_tmp\"\n      \n      \n    as (\n      --OK\n\n\nselect \n  json_extract_scalar(json_extract(identifier, '$[0]'), '$.value') as \"care_site_id\",\n  name as \"care_site_name\",\n  json_extract_scalar(json_extract(type, '$[0]'), '$.coding[0].code') as \"place_of_service_concept_id\",\n  current_timestamp as create_time\n\nFROM \"iceberg\".\"omop\".\"base_table_organization\"\n    )", "query_id": "20241024_065714_00124_jzmkd"}, "message": "CREATE TABLE (3 rows)", "failures": null, "unique_id": "model.my_dbt_trino_project.omop_care_site", "compiled": true, "compiled_code": "--OK\n\n\nselect \n  json_extract_scalar(json_extract(identifier, '$[0]'), '$.value') as \"care_site_id\",\n  name as \"care_site_name\",\n  json_extract_scalar(json_extract(type, '$[0]'), '$.coding[0].code') as \"place_of_service_concept_id\",\n  current_timestamp as create_time\n\nFROM \"iceberg\".\"omop\".\"base_table_organization\"", "relation_name": "\"iceberg\".\"omop\".\"omop_care_site\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:15.514511Z", "completed_at": "2024-10-24T06:57:15.532257Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:15.533993Z", "completed_at": "2024-10-24T06:57:16.503493Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9946722984313965, "adapter_response": {"_message": "CREATE TABLE (1 rows)", "rows_affected": 1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.omop_person\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"omop_person__dbt_tmp\"\n      \n      \n    as (\n      \n  \nSELECT\n  id as person_id,\n  CASE\n    WHEN gender = 'male' THEN 8507\n    WHEN gender = 'female' THEN 8532\n    ELSE 8551\n  END as gender_concept_id,\n  \n  EXTRACT(YEAR FROM date_parse(\"birthDate\", '%Y-%m-%d')) AS year_of_birth,\n  EXTRACT(MONTH FROM date_parse(\"birthDate\", '%Y-%m-%d')) AS month_of_birth,\n  EXTRACT(DAY FROM date_parse(\"birthDate\", '%Y-%m-%d')) AS day_of_birth,\n  \"birthDate\" as birth_datetime,\n  json_extract_scalar(json_array_get(identifier, 0), '$.value') AS person_source_value,\n  gender as gender_source_value,\n  current_timestamp as create_time\n\nFROM \n  \"iceberg\".\"omop\".\"base_table_patient\"\n    )", "query_id": "20241024_065715_00128_jzmkd"}, "message": "CREATE TABLE (1 rows)", "failures": null, "unique_id": "model.my_dbt_trino_project.omop_person", "compiled": true, "compiled_code": "\n  \nSELECT\n  id as person_id,\n  CASE\n    WHEN gender = 'male' THEN 8507\n    WHEN gender = 'female' THEN 8532\n    ELSE 8551\n  END as gender_concept_id,\n  \n  EXTRACT(YEAR FROM date_parse(\"birthDate\", '%Y-%m-%d')) AS year_of_birth,\n  EXTRACT(MONTH FROM date_parse(\"birthDate\", '%Y-%m-%d')) AS month_of_birth,\n  EXTRACT(DAY FROM date_parse(\"birthDate\", '%Y-%m-%d')) AS day_of_birth,\n  \"birthDate\" as birth_datetime,\n  json_extract_scalar(json_array_get(identifier, 0), '$.value') AS person_source_value,\n  gender as gender_source_value,\n  current_timestamp as create_time\n\nFROM \n  \"iceberg\".\"omop\".\"base_table_patient\"", "relation_name": "\"iceberg\".\"omop\".\"omop_person\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:16.517253Z", "completed_at": "2024-10-24T06:57:16.529650Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:16.532219Z", "completed_at": "2024-10-24T06:57:17.487372Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9763257503509521, "adapter_response": {"_message": "CREATE TABLE (6 rows)", "rows_affected": 6, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.omop_provider\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"omop_provider__dbt_tmp\"\n      \n      \n    as (\n      \n  \nselect \n  json_extract_scalar(json_array_get(identifier, 0), '$.value') as \"provider_id\",--\u91ab\u7642\u670d\u52d9\u63d0\u4f9b\u8005id\n  json_extract_scalar(json_array_get(identifier, 0), '$.value') as \"provider_name\",--\u91ab\u7642\u670d\u52d9\u63d0\u4f9b\u8005name\u7f3a\u6f0f\n  json_extract_scalar(json_array_get(identifier, 0), '$.value') as \"npi\",--\u5168\u570b\u91ab\u7642\u670d\u52d9\u63d0\u4f9b\u8005\u8b58\u5225\u78bc\u3002\u552f\u4e0010\u4f4d\u6578\u5b57\u8b58\u5225\u78bc\n  'qualification' as \"dea\", --\u7f3a\u6f0f\uff0c\u6709\u6b0a\u958b\u5177\u53d7\u7ba1\u5236\u85e5\u7269\u7684\u91ab\u7642\u63d0\u4f9b\u8005\u7684\u552f\u4e00\u8b58\u5225\u78bc\u3002\n  regexp_extract(identifier, '\"code\":\\s*\"([^\"]+)\"', 1) as \"specialty_concept_id\",--\u91ab\u7642\u63d0\u4f9b\u8005\u7684\u5c08\u696d(\u5167\u5916\u79d1\u7b49\u5c0d\u61c9\u4e00\u500bid)\n  'location' as \"care_site_id\", --\u7f3a\u6f0f \u91ab\u7642\u6a5f\u69cbCare Site\u552f\u4e00\u8b58\u5225\u78bc\n  'birthDate' as \"year_of_birth\", --\u7f3a\u6f0f\n  'gender' as \"gender_concept_id\", --\u7f3a\u6f0f\n  current_timestamp as create_time\nFROM \n  \"iceberg\".\"omop\".\"base_table_practitioner\"\n    )", "query_id": "20241024_065716_00132_jzmkd"}, "message": "CREATE TABLE (6 rows)", "failures": null, "unique_id": "model.my_dbt_trino_project.omop_provider", "compiled": true, "compiled_code": "\n  \nselect \n  json_extract_scalar(json_array_get(identifier, 0), '$.value') as \"provider_id\",--\u91ab\u7642\u670d\u52d9\u63d0\u4f9b\u8005id\n  json_extract_scalar(json_array_get(identifier, 0), '$.value') as \"provider_name\",--\u91ab\u7642\u670d\u52d9\u63d0\u4f9b\u8005name\u7f3a\u6f0f\n  json_extract_scalar(json_array_get(identifier, 0), '$.value') as \"npi\",--\u5168\u570b\u91ab\u7642\u670d\u52d9\u63d0\u4f9b\u8005\u8b58\u5225\u78bc\u3002\u552f\u4e0010\u4f4d\u6578\u5b57\u8b58\u5225\u78bc\n  'qualification' as \"dea\", --\u7f3a\u6f0f\uff0c\u6709\u6b0a\u958b\u5177\u53d7\u7ba1\u5236\u85e5\u7269\u7684\u91ab\u7642\u63d0\u4f9b\u8005\u7684\u552f\u4e00\u8b58\u5225\u78bc\u3002\n  regexp_extract(identifier, '\"code\":\\s*\"([^\"]+)\"', 1) as \"specialty_concept_id\",--\u91ab\u7642\u63d0\u4f9b\u8005\u7684\u5c08\u696d(\u5167\u5916\u79d1\u7b49\u5c0d\u61c9\u4e00\u500bid)\n  'location' as \"care_site_id\", --\u7f3a\u6f0f \u91ab\u7642\u6a5f\u69cbCare Site\u552f\u4e00\u8b58\u5225\u78bc\n  'birthDate' as \"year_of_birth\", --\u7f3a\u6f0f\n  'gender' as \"gender_concept_id\", --\u7f3a\u6f0f\n  current_timestamp as create_time\nFROM \n  \"iceberg\".\"omop\".\"base_table_practitioner\"", "relation_name": "\"iceberg\".\"omop\".\"omop_provider\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:17.500488Z", "completed_at": "2024-10-24T06:57:17.512601Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:17.514598Z", "completed_at": "2024-10-24T06:57:18.427869Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9326808452606201, "adapter_response": {"_message": "CREATE TABLE (1 rows)", "rows_affected": 1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.omop_procedure_occurrence\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"omop_procedure_occurrence__dbt_tmp\"\n      \n      \n    as (\n      \n\n\nSELECT\n  resource_id as \"procedure_occurrence_id\", --\u7f3a\u6f0f\n  json_extract_scalar(subject, '$.reference') AS \"visit_occurrence_id\", --\u7f3a\u6f0f\n  current_timestamp as create_time\n\nFROM \n  \"iceberg\".\"omop\".\"base_table_procedure\"\n    )", "query_id": "20241024_065717_00136_jzmkd"}, "message": "CREATE TABLE (1 rows)", "failures": null, "unique_id": "model.my_dbt_trino_project.omop_procedure_occurrence", "compiled": true, "compiled_code": "\n\n\nSELECT\n  resource_id as \"procedure_occurrence_id\", --\u7f3a\u6f0f\n  json_extract_scalar(subject, '$.reference') AS \"visit_occurrence_id\", --\u7f3a\u6f0f\n  current_timestamp as create_time\n\nFROM \n  \"iceberg\".\"omop\".\"base_table_procedure\"", "relation_name": "\"iceberg\".\"omop\".\"omop_procedure_occurrence\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:18.445151Z", "completed_at": "2024-10-24T06:57:18.458600Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:18.460752Z", "completed_at": "2024-10-24T06:57:19.330690Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.8921358585357666, "adapter_response": {"_message": "CREATE TABLE (1 rows)", "rows_affected": 1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.my_dbt_trino_project.omop_specimen\"} */\n\n  \n    \n\n    create table \"iceberg\".\"omop\".\"omop_specimen__dbt_tmp\"\n      \n      \n    as (\n      \n\nselect \n  id as \"specimen_id\",--\u6aa2\u9ad4\u8b58\u5225\u78bc\n  subject as \"person_id\", --\u503c\u540d\u8207\u5b98\u7db2\u4e0d\u540c\n  json_extract_scalar(type, '$.coding[0].code') as \"specimen_concept_id\",--\u6aa2\u9ad4\u985e\u578bid\n  receivedTime as \"specimen_date\", --\u91cd\u8907\u6642\u9593\n  receivedTime as \"specimen_datetime\" , --\u91cd\u8907\u6642\u9593\n  'quantity' as \"quantity\", --\u7f3a\u6f0f quantity\n  'unit' as \"unit_concept_id\", --\u7f3a\u6f0f quantity.unit\n  'text' as \"anatomic_site_concept_id\", --\u4f4d\u7f6e\u8207\u5b98\u7db2\u4e0d\u540c \n  current_timestamp as create_time\n\nFROM \n  \"iceberg\".\"omop\".\"base_table_specimen\"\n    )", "query_id": "20241024_065718_00140_jzmkd"}, "message": "CREATE TABLE (1 rows)", "failures": null, "unique_id": "model.my_dbt_trino_project.omop_specimen", "compiled": true, "compiled_code": "\n\nselect \n  id as \"specimen_id\",--\u6aa2\u9ad4\u8b58\u5225\u78bc\n  subject as \"person_id\", --\u503c\u540d\u8207\u5b98\u7db2\u4e0d\u540c\n  json_extract_scalar(type, '$.coding[0].code') as \"specimen_concept_id\",--\u6aa2\u9ad4\u985e\u578bid\n  receivedTime as \"specimen_date\", --\u91cd\u8907\u6642\u9593\n  receivedTime as \"specimen_datetime\" , --\u91cd\u8907\u6642\u9593\n  'quantity' as \"quantity\", --\u7f3a\u6f0f quantity\n  'unit' as \"unit_concept_id\", --\u7f3a\u6f0f quantity.unit\n  'text' as \"anatomic_site_concept_id\", --\u4f4d\u7f6e\u8207\u5b98\u7db2\u4e0d\u540c \n  current_timestamp as create_time\n\nFROM \n  \"iceberg\".\"omop\".\"base_table_specimen\"", "relation_name": "\"iceberg\".\"omop\".\"omop_specimen\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.dim_dbt__exposures", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"dim_dbt__exposures\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.fct_dbt__invocations", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"fct_dbt__invocations\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.fct_dbt__model_executions", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"fct_dbt__model_executions\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.dim_dbt__current_models", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"dim_dbt__current_models\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.dim_dbt__models", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"dim_dbt__models\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.fct_dbt__seed_executions", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"fct_dbt__seed_executions\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.dim_dbt__seeds", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"dim_dbt__seeds\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.fct_dbt__snapshot_executions", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"fct_dbt__snapshot_executions\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.dim_dbt__snapshots", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"dim_dbt__snapshots\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.dim_dbt__sources", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"dim_dbt__sources\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.fct_dbt__test_executions", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"fct_dbt__test_executions\""}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_artifacts.dim_dbt__tests", "compiled": false, "compiled_code": null, "relation_name": "\"iceberg\".\"omop\".\"dim_dbt__tests\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:19.509204Z", "completed_at": "2024-10-24T06:57:19.531625Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:19.533081Z", "completed_at": "2024-10-24T06:57:19.725266Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.22297191619873047, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.anomaly_threshold_sensitivity\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"anomaly_threshold_sensitivity\"\n  security definer\n  as\n    \n\nwith metrics_anomaly_score as (\n\n    select * from \"iceberg\".\"omop\".\"metrics_anomaly_score\"\n\n),\n\nscore_sensitivity as (\n\n    select\n        full_table_name,\n        column_name,\n        metric_name,\n        latest_metric_value,\n        training_avg as metric_avg,\n        training_stddev as metric_stddev,\n        anomaly_score,\n        case when abs(anomaly_score) >= 1.5 then true else false end as \"is_anomaly_1_5\",\n        case when abs(anomaly_score) >= 2 then true else false end as \"is_anomaly_2\",\n        case when abs(anomaly_score) >= 2.5 then true else false end as \"is_anomaly_2_5\",\n        case when abs(anomaly_score) >= 3 then true else false end as \"is_anomaly_3\",\n        case when abs(anomaly_score) >= 3.5 then true else false end as \"is_anomaly_3_5\",\n        case when abs(anomaly_score) >= 4 then true else false end as \"is_anomaly_4\",\n        case when abs(anomaly_score) >= 4.5 then true else false end as \"is_anomaly_4_5\"\n    from metrics_anomaly_score\n    where abs(anomaly_score) >= 1.5\n\n)\n\nselect * from score_sensitivity\n  ", "query_id": "20241024_065719_00144_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.elementary.anomaly_threshold_sensitivity", "compiled": true, "compiled_code": "\n\nwith metrics_anomaly_score as (\n\n    select * from \"iceberg\".\"omop\".\"metrics_anomaly_score\"\n\n),\n\nscore_sensitivity as (\n\n    select\n        full_table_name,\n        column_name,\n        metric_name,\n        latest_metric_value,\n        training_avg as metric_avg,\n        training_stddev as metric_stddev,\n        anomaly_score,\n        case when abs(anomaly_score) >= 1.5 then true else false end as \"is_anomaly_1_5\",\n        case when abs(anomaly_score) >= 2 then true else false end as \"is_anomaly_2\",\n        case when abs(anomaly_score) >= 2.5 then true else false end as \"is_anomaly_2_5\",\n        case when abs(anomaly_score) >= 3 then true else false end as \"is_anomaly_3\",\n        case when abs(anomaly_score) >= 3.5 then true else false end as \"is_anomaly_3_5\",\n        case when abs(anomaly_score) >= 4 then true else false end as \"is_anomaly_4\",\n        case when abs(anomaly_score) >= 4.5 then true else false end as \"is_anomaly_4_5\"\n    from metrics_anomaly_score\n    where abs(anomaly_score) >= 1.5\n\n)\n\nselect * from score_sensitivity", "relation_name": "\"iceberg\".\"omop\".\"anomaly_threshold_sensitivity\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-24T06:57:19.740489Z", "completed_at": "2024-10-24T06:57:19.761659Z"}, {"name": "execute", "started_at": "2024-10-24T06:57:19.763708Z", "completed_at": "2024-10-24T06:57:19.977860Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.24523568153381348, "adapter_response": {"_message": "CREATE VIEW", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.8\", \"profile_name\": \"my_dbt_trino_project\", \"target_name\": \"dev\", \"node_id\": \"model.elementary.alerts_dbt_models\"} */\n\n  create or replace view\n    \"iceberg\".\"omop\".\"alerts_dbt_models\"\n  security definer\n  as\n    \n\nwith error_models as (\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias \n    from \"iceberg\".\"omop\".\"model_run_results\"\n  \n    union all\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias  \n  from \"iceberg\".\"omop\".\"snapshot_run_results\"\n)\n\n\nselect model_execution_id as alert_id,\n       unique_id,\n       coalesce(\n        try_cast(generated_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(generated_at AS varchar)) AS \n    timestamp(6)\n)\n    ) as detected_at,\n       database_name,\n       materialization,\n       path,\n       original_path,\n       schema_name,\n       message,\n       owner as owners,\n       tags,\n       alias,\n       status,\n       full_refresh\nfrom error_models\nwhere True and lower(status) != 'success'and lower(status) != 'skipped'\n  ", "query_id": "20241024_065719_00145_jzmkd"}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.elementary.alerts_dbt_models", "compiled": true, "compiled_code": "\n\nwith error_models as (\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias \n    from \"iceberg\".\"omop\".\"model_run_results\"\n  \n    union all\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias  \n  from \"iceberg\".\"omop\".\"snapshot_run_results\"\n)\n\n\nselect model_execution_id as alert_id,\n       unique_id,\n       coalesce(\n        try_cast(generated_at as \n    timestamp(6)\n),\n        cast(from_iso8601_timestamp(cast(generated_at AS varchar)) AS \n    timestamp(6)\n)\n    ) as detected_at,\n       database_name,\n       materialization,\n       path,\n       original_path,\n       schema_name,\n       message,\n       owner as owners,\n       tags,\n       alias,\n       status,\n       full_refresh\nfrom error_models\nwhere True and lower(status) != 'success'and lower(status) != 'skipped'", "relation_name": "\"iceberg\".\"omop\".\"alerts_dbt_models\""}], "elapsed_time": 73.65182209014893, "args": {"include_saved_query": false, "introspect": true, "invocation_command": "dbt build --select fqn:*", "indirect_selection": "eager", "project_dir": "C:\\Users\\ASUS\\Desktop\\work\\datalake\\dbt-omop", "target_path": "target\\my_dbt_trino_project_dbt_assets-e3a95c1-1a8c12b", "log_file_max_bytes": 10485760, "require_resource_names_without_spaces": false, "strict_mode": false, "require_explicit_package_overrides_for_builtin_materializations": true, "print": true, "warn_error_options": {"include": [], "exclude": []}, "populate_cache": true, "defer": false, "cache_selected_only": false, "use_colors_file": true, "write_json": true, "exclude_resource_types": [], "favor_state": false, "macro_debugging": false, "log_path": "C:\\Users\\ASUS\\Desktop\\work\\datalake\\dbt-omop\\target\\my_dbt_trino_project_dbt_assets-e3a95c1-1a8c12b", "log_level_file": "debug", "log_level": "info", "quiet": false, "version_check": true, "log_format_file": "json", "resource_types": [], "exclude": [], "empty": false, "send_anonymous_usage_stats": false, "source_freshness_run_project_hooks": false, "log_format": "json", "show": false, "use_colors": true, "static_parser": true, "enable_legacy_logger": false, "profiles_dir": "C:\\Users\\ASUS\\Desktop\\work\\datalake\\dbt-omop", "vars": {}, "partial_parse": true, "select": ["fqn:*"], "export_saved_queries": false, "partial_parse_file_diff": true, "printer_width": 80, "show_resource_report": false, "which": "build"}}